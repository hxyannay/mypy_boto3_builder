[tool.black]
line-length = 100
include = '(mypy_boto3_builder|tests)/.*\.pyi?$'
target-version = ['py310', 'py311', 'py312']
preview = true

[tool.isort]
profile = "black"
line_length = 100
known_third_party = ["botocore", "boto3", "aiobotocore"]
known_first_party = ["mypy_boto3_builder", "tests"]
src_paths = []

[project]
name = "mypy-boto3-builder"
version = "7.26.1"
requires-python = ">=3.10"
description = "Builder for boto3-stubs and types-aiobotocore"
authors = [{ name = "Vlad Emelianov", email = "vlad.emelianov.nz@gmail.com" }]
license = { file = "LICENSE" }
readme = "README.md"
keywords = ["boto3", "type-annotations", "pyright", "mypy", "boto3-stubs"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "boto3",
    "black",
    "isort",
    "jinja2",
    "mdformat",
    "typing_extensions",
    "packaging",
    "setuptools",
]

[project.optional-dependencies]
check = ["boto3-stubs", "types-aiobotocore", "types-aioboto3"]

[tool.uv]
dev-dependencies = [
    "cryptography",
    "types-requests",
    "types-setuptools",
    "types-six",
    "types-certifi",
    "types-python-dateutil",
    "types-urllib3",
    "types-s3transfer",
    "boto3-stubs",
    "botocore-stubs",
    "pre-commit",
    "mypy",
    "ruff",
    "flake8",
    "vulture",
    "pyright",
    "istub",
    "twine",
    "pytest-cov",
    "pytest",
    "aiohttp>=3.10.5",
    "wheel>=0.44.0",
]

[project.scripts]
mypy_boto3_builder = 'mypy_boto3_builder.main:main'

[project.urls]
Homepage = "https://github.com/youtype/mypy_boto3_builder"
Documentation = "https://github.com/youtype/mypy_boto3_builder"
Repository = "https://github.com/youtype/mypy_boto3_builder"
Changelog = "https://github.com/youtype/mypy_boto3_builder/releases"
Issues = "https://github.com/youtype/mypy_boto3_builder/issues"

[build-system]
requires = ['setuptools']
build-backend = 'setuptools.build_meta'

[tool.setuptools]
py-modules = ["mypy_boto3_builder"]

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
]
ignore_errors = true
omit = ["tests/*"]

[tool.pyright]
include = ["mypy_boto3_builder", "scripts"]
exclude = ["tests"]
ignore = [
    ".venv",
    "**/__pycache__",
    "**/build",
    "typestubs",
    "examples",
    "aio_examples",
]
typeCheckingMode = "strict"
reportMissingImports = "error"
reportMissingTypeStubs = "error"
reportMissingTypeArgument = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportUnknownParameterType = "error"
pythonVersion = "3.10"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_ignores = false
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
ignore_errors = false

[[tool.mypy.overrides]]
module = "mypy-tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "mypy-mypy_boto3_builder.stubs_static.aiobotocore.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "mypy-mypy_boto3_builder.stubs_static.aioboto3.*"
ignore_errors = true

[tool.ruff]
exclude = [
    ".eggs",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "build",
    "dist",
]

line-length = 100
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# preview = true
select = [
    "E",
    "W",
    "F",
    "B",
    "I",
    "N",
    "D",
    "C4",
    "C90",
    "RUF",
    "SIM",
    "PYI",
    "PT",
    "T",
    "LOG",
    "Q",
    "RSE",
    "RET",
    "TID",
    "TCH",
    "S",
    "BLE",
    "ANN",
    "A",
    "PTH",
    "YTT",
    "UP",
    "TRY",
    "PERF",
    "FURB",
]
ignore = [
    "D107",
    "D200",
    "D203",
    "D212",
    "D406",
    "D407",
    "D413",
    "D417",
    "S310",
    "S404",
    "S603",
    "ANN101",
    "ANN102",
    "ANN401",
    "TRY003",
    "PERF203",
]
fixable = ["ALL"]
unfixable = ["B"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
exclude = ["test_*.py", "*.pyi", "examples/*", "aio_examples/*"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.vulture]
make_whitelist = true
min_confidence = 60
paths = ["mypy_boto3_builder", "vulture_whitelist.txt"]
