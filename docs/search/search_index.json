{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mypy_boto3_builder Index","text":"<p>Auto-generated documentation index.</p> <p>A full list of Mypy_boto3_builder project modules.</p> <ul> <li>Examples<ul> <li>Dynamodb Example</li> <li>Ec2 Example</li> <li>Emr Example</li> <li>Iam Example</li> <li>S3 Example</li> <li>Secretsmanager Example</li> <li>Sqs Example</li> </ul> </li> <li>Mypy Boto3 Builder<ul> <li>Module</li> <li>Cli Parser</li> <li>Constants</li> <li>Enums<ul> <li>ServiceModuleName</li> </ul> </li> <li>Generators<ul> <li>AioBoto3Generator</li> <li>AioBotocoreGenerator</li> <li>BaseGenerator</li> <li>Boto3Generator</li> </ul> </li> <li>Import Helpers<ul> <li>ImportRecord</li> <li>ImportString</li> <li>InternalImportRecord</li> </ul> </li> <li>JinjaManager</li> <li>Logger</li> <li>Main</li> <li>Package Data</li> <li>Parsers<ul> <li>Aiobotocore Stubs Package</li> <li>Boto3 Stubs Package</li> <li>Client</li> <li>Fake Service Package</li> <li>Helpers</li> <li>Master Package</li> <li>Parse Attributes</li> <li>Parse Collections</li> <li>Parse Identifiers</li> <li>Parse References</li> <li>Parse Resource</li> <li>ServicePackageParser</li> <li>Service Resource</li> <li>ShapeParser</li> <li>Types Aioboto3 Package</li> </ul> </li> <li>Postprocessors<ul> <li>Aiobotocore</li> <li>Base</li> <li>Botocore</li> </ul> </li> <li>ServiceName</li> <li>Structures<ul> <li>AioBotocoreStubsPackage</li> <li>Argument</li> <li>Attribute</li> <li>Boto3StubsPackage</li> <li>ClassRecord</li> <li>Client</li> <li>Collection</li> <li>Function</li> <li>MasterPackage</li> <li>Method</li> <li>Package</li> <li>Paginator</li> <li>Resource</li> <li>ServicePackage</li> <li>ServiceResource</li> <li>TypesAioBoto3Package</li> <li>Waiter</li> </ul> </li> <li>Stubs Static</li> <li>Type Annotations<ul> <li>ExternalImport</li> <li>FakeAnnotation</li> <li>InternalImport</li> <li>RemoveArgument</li> <li>Type</li> <li>TypeAnnotation</li> <li>TypeConstant</li> <li>TypeDefSortable</li> <li>TypeLiteral</li> <li>TypeSubscript</li> <li>TypeTypedDict</li> <li>TypeUnion</li> </ul> </li> <li>Type Maps<ul> <li>Aio Resource Method Map</li> <li>Argument Alias Map</li> <li>Literal Type Map</li> <li>Method Type Map</li> <li>Named Unions</li> <li>Service Stub Map<ul> <li>Dynamodb</li> <li>Ec2</li> <li>Rds</li> <li>S3</li> </ul> </li> <li>Shape Type Map</li> <li>Typed Dicts</li> </ul> </li> <li>Utils<ul> <li>Boto3 Utils</li> <li>BotocoreChangelog</li> <li>Jinja2</li> <li>Markdown</li> <li>NicePath</li> <li>PyPIManager</li> <li>Strings</li> <li>TypeDefSorter</li> <li>Version</li> </ul> </li> <li>Writers<ul> <li>Aioboto3 Processors</li> <li>Aiobotocore Processors</li> <li>PackageWriter</li> <li>Processors</li> <li>Utils</li> </ul> </li> <li>Types Boto3</li> <li>Types Botocore</li> </ul> </li> </ul>"},{"location":"examples/","title":"Examples","text":"<p>Mypy_boto3_builder Index / Examples</p> <p>Auto-generated documentation for examples module.</p>"},{"location":"examples/#modules","title":"Modules","text":"<ul> <li>Dynamodb Example</li> <li>Ec2 Example</li> <li>Emr Example</li> <li>Iam Example</li> <li>S3 Example</li> <li>Secretsmanager Example</li> <li>Sqs Example</li> </ul>"},{"location":"examples/dynamodb_example/","title":"Dynamodb Example","text":"<p>Mypy_boto3_builder Index / Examples / Dynamodb Example</p> <p>Auto-generated documentation for examples.dynamodb_example module.</p>"},{"location":"examples/dynamodb_example/#dynamodb_client_example","title":"dynamodb_client_example","text":"<p>Show source in dynamodb_example.py:9</p>"},{"location":"examples/dynamodb_example/#signature","title":"Signature","text":"<pre><code>def dynamodb_client_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/dynamodb_example/#main","title":"main","text":"<p>Show source in dynamodb_example.py:39</p>"},{"location":"examples/dynamodb_example/#signature_1","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"examples/ec2_example/","title":"Ec2 Example","text":"<p>Mypy_boto3_builder Index / Examples / Ec2 Example</p> <p>Auto-generated documentation for examples.ec2_example module.</p>"},{"location":"examples/ec2_example/#ec2_client_example","title":"ec2_client_example","text":"<p>Show source in ec2_example.py:28</p>"},{"location":"examples/ec2_example/#signature","title":"Signature","text":"<pre><code>def ec2_client_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/ec2_example/#ec2_resource_example","title":"ec2_resource_example","text":"<p>Show source in ec2_example.py:7</p>"},{"location":"examples/ec2_example/#signature_1","title":"Signature","text":"<pre><code>def ec2_resource_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/ec2_example/#main","title":"main","text":"<p>Show source in ec2_example.py:37</p>"},{"location":"examples/ec2_example/#signature_2","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"examples/emr_example/","title":"Emr Example","text":"<p>Mypy_boto3_builder Index / Examples / Emr Example</p> <p>Auto-generated documentation for examples.emr_example module.</p>"},{"location":"examples/emr_example/#emr_client_example","title":"emr_client_example","text":"<p>Show source in emr_example.py:6</p>"},{"location":"examples/emr_example/#signature","title":"Signature","text":"<pre><code>def emr_client_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/emr_example/#main","title":"main","text":"<p>Show source in emr_example.py:19</p>"},{"location":"examples/emr_example/#signature_1","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"examples/iam_example/","title":"Iam Example","text":"<p>Mypy_boto3_builder Index / Examples / Iam Example</p> <p>Auto-generated documentation for examples.iam_example module.</p>"},{"location":"examples/iam_example/#iam_client_example","title":"iam_client_example","text":"<p>Show source in iam_example.py:6</p>"},{"location":"examples/iam_example/#signature","title":"Signature","text":"<pre><code>def iam_client_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/iam_example/#iam_resource_example","title":"iam_resource_example","text":"<p>Show source in iam_example.py:18</p>"},{"location":"examples/iam_example/#signature_1","title":"Signature","text":"<pre><code>def iam_resource_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/iam_example/#main","title":"main","text":"<p>Show source in iam_example.py:24</p>"},{"location":"examples/iam_example/#signature_2","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"examples/s3_example/","title":"S3 Example","text":"<p>Mypy_boto3_builder Index / Examples / S3 Example</p> <p>Auto-generated documentation for examples.s3_example module.</p>"},{"location":"examples/s3_example/#main","title":"main","text":"<p>Show source in s3_example.py:86</p>"},{"location":"examples/s3_example/#signature","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"examples/s3_example/#s3_client_example","title":"s3_client_example","text":"<p>Show source in s3_example.py:44</p>"},{"location":"examples/s3_example/#signature_1","title":"Signature","text":"<pre><code>def s3_client_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/s3_example/#s3_resource_example","title":"s3_resource_example","text":"<p>Show source in s3_example.py:9</p>"},{"location":"examples/s3_example/#signature_2","title":"Signature","text":"<pre><code>def s3_resource_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/secretsmanager_example/","title":"Secretsmanager Example","text":"<p>Mypy_boto3_builder Index / Examples / Secretsmanager Example</p> <p>Auto-generated documentation for examples.secretsmanager_example module.</p>"},{"location":"examples/secretsmanager_example/#main","title":"main","text":"<p>Show source in secretsmanager_example.py:12</p>"},{"location":"examples/secretsmanager_example/#signature","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"examples/secretsmanager_example/#secretsmanager_client_example","title":"secretsmanager_client_example","text":"<p>Show source in secretsmanager_example.py:6</p>"},{"location":"examples/secretsmanager_example/#signature_1","title":"Signature","text":"<pre><code>def secretsmanager_client_example() -&gt; None: ...\n</code></pre>"},{"location":"examples/sqs_example/","title":"Sqs Example","text":"<p>Mypy_boto3_builder Index / Examples / Sqs Example</p> <p>Auto-generated documentation for examples.sqs_example module.</p>"},{"location":"examples/sqs_example/#main","title":"main","text":"<p>Show source in sqs_example.py:15</p>"},{"location":"examples/sqs_example/#signature","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"examples/sqs_example/#sqs_resource_example","title":"sqs_resource_example","text":"<p>Show source in sqs_example.py:6</p>"},{"location":"examples/sqs_example/#signature_1","title":"Signature","text":"<pre><code>def sqs_resource_example() -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/","title":"Mypy Boto3 Builder","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder</p> <p>Auto-generated documentation for mypy_boto3_builder module.</p>"},{"location":"mypy_boto3_builder/#modules","title":"Modules","text":"<ul> <li>Module</li> <li>Cli Parser</li> <li>Constants</li> <li>Enums</li> <li>Generators</li> <li>Import Helpers</li> <li>JinjaManager</li> <li>Logger</li> <li>Main</li> <li>Package Data</li> <li>Parsers</li> <li>Postprocessors</li> <li>ServiceName</li> <li>Structures</li> <li>Stubs Static</li> <li>Type Annotations</li> <li>Type Maps</li> <li>Utils</li> <li>Writers</li> </ul>"},{"location":"mypy_boto3_builder/cli_parser/","title":"Cli Parser","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Cli Parser</p> <p>Auto-generated documentation for mypy_boto3_builder.cli_parser module.</p>"},{"location":"mypy_boto3_builder/cli_parser/#namespace","title":"Namespace","text":"<p>Show source in cli_parser.py:30</p> <p>CLI arguments namespace.</p>"},{"location":"mypy_boto3_builder/cli_parser/#signature","title":"Signature","text":"<pre><code>class Namespace: ...\n</code></pre>"},{"location":"mypy_boto3_builder/cli_parser/#get_absolute_path","title":"get_absolute_path","text":"<p>Show source in cli_parser.py:16</p> <p>Get absolute path from a string.</p>"},{"location":"mypy_boto3_builder/cli_parser/#arguments","title":"Arguments","text":"<ul> <li><code>path</code> - String containing path.</li> </ul>"},{"location":"mypy_boto3_builder/cli_parser/#returns","title":"Returns","text":"<p>Absolute path.</p>"},{"location":"mypy_boto3_builder/cli_parser/#signature_1","title":"Signature","text":"<pre><code>def get_absolute_path(path: str) -&gt; Path: ...\n</code></pre>"},{"location":"mypy_boto3_builder/cli_parser/#parse_args","title":"parse_args","text":"<p>Show source in cli_parser.py:47</p> <p>Parse CLI arguments.</p>"},{"location":"mypy_boto3_builder/cli_parser/#returns_1","title":"Returns","text":"<p>Argument parser.</p>"},{"location":"mypy_boto3_builder/cli_parser/#signature_2","title":"Signature","text":"<pre><code>def parse_args(args: Sequence[str]) -&gt; Namespace: ...\n</code></pre>"},{"location":"mypy_boto3_builder/cli_parser/#see-also","title":"See also","text":"<ul> <li>Namespace</li> </ul>"},{"location":"mypy_boto3_builder/constants/","title":"Constants","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Constants</p> <p>Auto-generated documentation for mypy_boto3_builder.constants module.</p>"},{"location":"mypy_boto3_builder/constants/#attributes","title":"Attributes","text":"<ul> <li> <p><code>DUMMY_REGION</code> - Random region to initialize services: <code>'us-west-2'</code></p> </li> <li> <p><code>TEMPLATES_PATH</code> - Jinja2 templates for boto3-stubs: <code>Path(__file__).parent / 'templates'</code></p> </li> <li> <p><code>BOTO3_STUBS_STATIC_PATH</code> - Static *.pyi files for boto3-stubs: <code>Path(__file__).parent / 'stubs_static' / 'boto3'</code></p> </li> <li> <p><code>AIOBOTOCORE_STUBS_STATIC_PATH</code> - Static *.pyi files for types-aiobotocore: <code>Path(__file__).parent / 'stubs_static' / 'aiobotocore'</code></p> </li> <li> <p><code>AIOBOTO3_STUBS_STATIC_PATH</code> - Static *.pyi files for types-aioboto3: <code>Path(__file__).parent / 'stubs_static' / 'aioboto3'</code></p> </li> <li> <p><code>LINE_LENGTH</code> - Max line length for boto3 docs: <code>100</code></p> </li> <li> <p><code>BUILDER_REPO_URL</code> - mypy-boto3-builder GitHub link: <code>'https://github.com/youtype/mypy_boto3_builder'</code></p> </li> <li> <p><code>LOGGER_NAME</code> - Main logger name: <code>'mypy_boto3_builder'</code></p> </li> <li> <p><code>PROG_NAME</code> - builder CLI entrypoint name: <code>'mypy_boto3_builder'</code></p> </li> <li> <p><code>PACKAGE_NAME</code> - builder package name: <code>'mypy-boto3-builder'</code></p> </li> <li> <p><code>ALL</code> - universal mask for all resources: <code>'*'</code></p> </li> </ul>"},{"location":"mypy_boto3_builder/constants/#product","title":"Product","text":"<p>Show source in constants.py:63</p> <p>Product choice for CLI.</p>"},{"location":"mypy_boto3_builder/constants/#signature","title":"Signature","text":"<pre><code>class Product(Enum): ...\n</code></pre>"},{"location":"mypy_boto3_builder/constants/#productget_library","title":"Product().get_library","text":"<p>Show source in constants.py:80</p> <p>Get library name.</p>"},{"location":"mypy_boto3_builder/constants/#signature_1","title":"Signature","text":"<pre><code>def get_library(self) -&gt; ProductLibrary: ...\n</code></pre>"},{"location":"mypy_boto3_builder/constants/#see-also","title":"See also","text":"<ul> <li>ProductLibrary</li> </ul>"},{"location":"mypy_boto3_builder/constants/#productget_type","title":"Product().get_type","text":"<p>Show source in constants.py:89</p> <p>Get product type.</p>"},{"location":"mypy_boto3_builder/constants/#signature_2","title":"Signature","text":"<pre><code>def get_type(self) -&gt; ProductType: ...\n</code></pre>"},{"location":"mypy_boto3_builder/constants/#see-also_1","title":"See also","text":"<ul> <li>ProductType</li> </ul>"},{"location":"mypy_boto3_builder/constants/#productlibrary","title":"ProductLibrary","text":"<p>Show source in constants.py:43</p> <p>Product library for Generator.</p>"},{"location":"mypy_boto3_builder/constants/#signature_3","title":"Signature","text":"<pre><code>class ProductLibrary(Enum): ...\n</code></pre>"},{"location":"mypy_boto3_builder/constants/#producttype","title":"ProductType","text":"<p>Show source in constants.py:53</p> <p>Product type for Generator.</p>"},{"location":"mypy_boto3_builder/constants/#signature_4","title":"Signature","text":"<pre><code>class ProductType(Enum): ...\n</code></pre>"},{"location":"mypy_boto3_builder/jinja_manager/","title":"JinjaManager","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / JinjaManager</p> <p>Auto-generated documentation for mypy_boto3_builder.jinja_manager module.</p>"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanager_1","title":"JinjaManager","text":"<p>Show source in jinja_manager.py:28</p> <p>Jinja2 <code>Environment</code> manager.</p>"},{"location":"mypy_boto3_builder/jinja_manager/#signature","title":"Signature","text":"<pre><code>class JinjaManager:\n    def __init__(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagerescape_md","title":"JinjaManager.escape_md","text":"<p>Show source in jinja_manager.py:72</p> <p>Escape underscore characters.</p>"},{"location":"mypy_boto3_builder/jinja_manager/#signature_1","title":"Signature","text":"<pre><code>@staticmethod\ndef escape_md(value: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagerget_template","title":"JinjaManager().get_template","text":"<p>Show source in jinja_manager.py:79</p> <p>Get <code>jinja2.Template</code>.</p>"},{"location":"mypy_boto3_builder/jinja_manager/#signature_2","title":"Signature","text":"<pre><code>def get_template(self, template_path: Path) -&gt; Template: ...\n</code></pre>"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagersingleton","title":"JinjaManager.singleton","text":"<p>Show source in jinja_manager.py:53</p> <p>Get singleton instance.</p>"},{"location":"mypy_boto3_builder/jinja_manager/#signature_3","title":"Signature","text":"<pre><code>@classmethod\ndef singleton(cls) -&gt; \"JinjaManager\": ...\n</code></pre>"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagerupdate_globals","title":"JinjaManager.update_globals","text":"<p>Show source in jinja_manager.py:62</p> <p>Update global variables in <code>jinja2.Environment</code>.</p>"},{"location":"mypy_boto3_builder/jinja_manager/#arguments","title":"Arguments","text":"<ul> <li><code>kwargs</code> - Globals to set.</li> </ul>"},{"location":"mypy_boto3_builder/jinja_manager/#signature_4","title":"Signature","text":"<pre><code>@classmethod\ndef update_globals(cls, **kwargs: str | bool | Callable[..., Any]) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagererror","title":"JinjaManagerError","text":"<p>Show source in jinja_manager.py:22</p> <p>Base JinjaManager exception.</p>"},{"location":"mypy_boto3_builder/jinja_manager/#signature_5","title":"Signature","text":"<pre><code>class JinjaManagerError(Exception): ...\n</code></pre>"},{"location":"mypy_boto3_builder/logger/","title":"Logger","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Logger</p> <p>Auto-generated documentation for mypy_boto3_builder.logger module.</p>"},{"location":"mypy_boto3_builder/logger/#get_logger","title":"get_logger","text":"<p>Show source in logger.py:12</p> <p>Get Logger instance.</p>"},{"location":"mypy_boto3_builder/logger/#arguments","title":"Arguments","text":"<ul> <li><code>verbose</code> - Set log level to DEBUG.</li> <li><code>panic</code> - Raise RuntimeError on warning.</li> </ul>"},{"location":"mypy_boto3_builder/logger/#returns","title":"Returns","text":"<p>Overriden Logger.</p>"},{"location":"mypy_boto3_builder/logger/#signature","title":"Signature","text":"<pre><code>def get_logger(level: int = 0) -&gt; logging.Logger: ...\n</code></pre>"},{"location":"mypy_boto3_builder/main/","title":"Main","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Main</p> <p>Auto-generated documentation for mypy_boto3_builder.main module.</p>"},{"location":"mypy_boto3_builder/main/#generate_product","title":"generate_product","text":"<p>Show source in main.py:103</p> <p>Generate a selected product.</p>"},{"location":"mypy_boto3_builder/main/#arguments","title":"Arguments","text":"<ul> <li><code>product</code> - Product to generate</li> <li><code>args</code> - CLI namespace</li> <li><code>service_names</code> - Selected service names</li> <li><code>master_service_names</code> - Service names included in master</li> </ul>"},{"location":"mypy_boto3_builder/main/#signature","title":"Signature","text":"<pre><code>def generate_product(\n    product: Product,\n    args: Namespace,\n    service_names: Sequence[ServiceName],\n    master_service_names: Sequence[ServiceName],\n) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/main/#see-also","title":"See also","text":"<ul> <li>Namespace</li> <li>Product</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/main/#get_available_service_names","title":"get_available_service_names","text":"<p>Show source in main.py:65</p> <p>Get a list of boto3 supported service names.</p>"},{"location":"mypy_boto3_builder/main/#arguments_1","title":"Arguments","text":"<ul> <li><code>session</code> - Boto3 session</li> </ul>"},{"location":"mypy_boto3_builder/main/#returns","title":"Returns","text":"<p>A list of supported services.</p>"},{"location":"mypy_boto3_builder/main/#signature_1","title":"Signature","text":"<pre><code>def get_available_service_names(session: BotocoreSession) -&gt; list[ServiceName]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/main/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/main/#get_generator_cls","title":"get_generator_cls","text":"<p>Show source in main.py:86</p> <p>Get Generator class for a product.</p>"},{"location":"mypy_boto3_builder/main/#raises","title":"Raises","text":"<ul> <li><code>ValueError</code> - If product is not supported.</li> </ul>"},{"location":"mypy_boto3_builder/main/#signature_2","title":"Signature","text":"<pre><code>def get_generator_cls(product: Product) -&gt; type[BaseGenerator]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/main/#see-also_2","title":"See also","text":"<ul> <li>BaseGenerator</li> <li>Product</li> </ul>"},{"location":"mypy_boto3_builder/main/#get_selected_service_names","title":"get_selected_service_names","text":"<p>Show source in main.py:25</p> <p>Get a list of selected service names.</p> <p>Supports <code>updated</code> to select only services updated in currect <code>boto3</code> release. Supports <code>all</code> to select all available service names.</p>"},{"location":"mypy_boto3_builder/main/#arguments_2","title":"Arguments","text":"<ul> <li><code>selected</code> - Selected service names as strings.</li> <li><code>available</code> - All ServiceNames available in current boto3 release.</li> </ul>"},{"location":"mypy_boto3_builder/main/#returns_1","title":"Returns","text":"<p>A list of selected ServiceNames.</p>"},{"location":"mypy_boto3_builder/main/#signature_3","title":"Signature","text":"<pre><code>def get_selected_service_names(\n    selected: Iterable[str], available: Iterable[ServiceName]\n) -&gt; list[ServiceName]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/main/#see-also_3","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/main/#main_1","title":"main","text":"<p>Show source in main.py:131</p> <p>Run builder.</p>"},{"location":"mypy_boto3_builder/main/#signature_4","title":"Signature","text":"<pre><code>def main() -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/module/","title":"Module","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Module</p> <p>Auto-generated documentation for mypy_boto3_builder.main module.</p>"},{"location":"mypy_boto3_builder/package_data/","title":"Package Data","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Package Data</p> <p>Auto-generated documentation for mypy_boto3_builder.package_data module.</p>"},{"location":"mypy_boto3_builder/package_data/#basepackagedata","title":"BasePackageData","text":"<p>Show source in package_data.py:14</p> <p>Generic package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature","title":"Signature","text":"<pre><code>class BasePackageData: ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_botocore_version","title":"BasePackageData.get_botocore_version","text":"<p>Show source in package_data.py:50</p> <p>Get underlying botocore version.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_1","title":"Signature","text":"<pre><code>@staticmethod\ndef get_botocore_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_library_version","title":"BasePackageData.get_library_version","text":"<p>Show source in package_data.py:43</p> <p>Get underlying library version.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_2","title":"Signature","text":"<pre><code>@staticmethod\ndef get_library_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_service_package_name","title":"BasePackageData.get_service_package_name","text":"<p>Show source in package_data.py:29</p> <p>Get service package name.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_3","title":"Signature","text":"<pre><code>@classmethod\ndef get_service_package_name(cls, service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_service_pypi_link","title":"BasePackageData.get_service_pypi_link","text":"<p>Show source in package_data.py:57</p> <p>Get link to PyPI.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_4","title":"Signature","text":"<pre><code>@classmethod\ndef get_service_pypi_link(cls, service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_service_pypi_name","title":"BasePackageData.get_service_pypi_name","text":"<p>Show source in package_data.py:36</p> <p>Get service package PyPI name.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_5","title":"Signature","text":"<pre><code>@classmethod\ndef get_service_pypi_name(cls, service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_2","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#boto3stubslitepackagedata","title":"Boto3StubsLitePackageData","text":"<p>Show source in package_data.py:109</p> <p>boto3-stubs-lite package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_6","title":"Signature","text":"<pre><code>class Boto3StubsLitePackageData(Boto3StubsPackageData): ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_3","title":"See also","text":"<ul> <li>Boto3StubsPackageData</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#boto3stubspackagedata","title":"Boto3StubsPackageData","text":"<p>Show source in package_data.py:95</p> <p>boto3-stubs package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_7","title":"Signature","text":"<pre><code>class Boto3StubsPackageData(BasePackageData): ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_4","title":"See also","text":"<ul> <li>BasePackageData</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#mypyboto3packagedata","title":"MypyBoto3PackageData","text":"<p>Show source in package_data.py:118</p> <p>mypy-boto3 package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_8","title":"Signature","text":"<pre><code>class MypyBoto3PackageData(BasePackageData): ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_5","title":"See also","text":"<ul> <li>BasePackageData</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#typesaioboto3litepackagedata","title":"TypesAioBoto3LitePackageData","text":"<p>Show source in package_data.py:150</p> <p>types-aioboto3-lite package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_9","title":"Signature","text":"<pre><code>class TypesAioBoto3LitePackageData(TypesAioBoto3PackageData): ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_6","title":"See also","text":"<ul> <li>TypesAioBoto3PackageData</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#typesaioboto3packagedata","title":"TypesAioBoto3PackageData","text":"<p>Show source in package_data.py:128</p> <p>types-aioboto3 package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_10","title":"Signature","text":"<pre><code>class TypesAioBoto3PackageData(BasePackageData): ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_7","title":"See also","text":"<ul> <li>BasePackageData</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#typesaioboto3packagedataget_library_version","title":"TypesAioBoto3PackageData.get_library_version","text":"<p>Show source in package_data.py:142</p> <p>Get underlying library version.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_11","title":"Signature","text":"<pre><code>@staticmethod\ndef get_library_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#typesaiobotocorelitepackagedata","title":"TypesAioBotocoreLitePackageData","text":"<p>Show source in package_data.py:86</p> <p>types-aiobotocore-lite package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_12","title":"Signature","text":"<pre><code>class TypesAioBotocoreLitePackageData(TypesAioBotocorePackageData): ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_8","title":"See also","text":"<ul> <li>TypesAioBotocorePackageData</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#typesaiobotocorepackagedata","title":"TypesAioBotocorePackageData","text":"<p>Show source in package_data.py:65</p> <p>types-aiobotocore package data.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_13","title":"Signature","text":"<pre><code>class TypesAioBotocorePackageData(BasePackageData): ...\n</code></pre>"},{"location":"mypy_boto3_builder/package_data/#see-also_9","title":"See also","text":"<ul> <li>BasePackageData</li> </ul>"},{"location":"mypy_boto3_builder/package_data/#typesaiobotocorepackagedataget_library_version","title":"TypesAioBotocorePackageData.get_library_version","text":"<p>Show source in package_data.py:78</p> <p>Get underlying library version.</p>"},{"location":"mypy_boto3_builder/package_data/#signature_14","title":"Signature","text":"<pre><code>@staticmethod\ndef get_library_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/","title":"ServiceName","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / ServiceName</p> <p>Auto-generated documentation for mypy_boto3_builder.service_name module.</p>"},{"location":"mypy_boto3_builder/service_name/#servicename_1","title":"ServiceName","text":"<p>Show source in service_name.py:15</p> <p>Description for boto3 service.</p>"},{"location":"mypy_boto3_builder/service_name/#signature","title":"Signature","text":"<pre><code>class ServiceName:\n    def __init__(\n        self, name: str, class_name: str, override_boto3_name: str = \"\"\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameboto3_doc_link","title":"ServiceName().boto3_doc_link","text":"<p>Show source in service_name.py:98</p> <p>Link to boto3 docs.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_1","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameboto3_name","title":"ServiceName().boto3_name","text":"<p>Show source in service_name.py:61</p> <p>Boto3 package name.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_2","title":"Signature","text":"<pre><code>@property\ndef boto3_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameextras_name","title":"ServiceName().extras_name","text":"<p>Show source in service_name.py:79</p> <p>Extras name for subpackage installation.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_3","title":"Signature","text":"<pre><code>@property\ndef extras_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameget_boto3_doc_link","title":"ServiceName().get_boto3_doc_link","text":"<p>Show source in service_name.py:108</p> <p>Get link to boto3 docs with anchor.</p>"},{"location":"mypy_boto3_builder/service_name/#arguments","title":"Arguments","text":"<ul> <li><code>parts</code> - Anchor parts</li> </ul>"},{"location":"mypy_boto3_builder/service_name/#signature_4","title":"Signature","text":"<pre><code>def get_boto3_doc_link(self, *parts: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameget_md_doc_link","title":"ServiceName.get_md_doc_link","text":"<p>Show source in service_name.py:117</p> <p>Get link to MD docs with anchor.</p>"},{"location":"mypy_boto3_builder/service_name/#arguments_1","title":"Arguments","text":"<ul> <li><code>file</code> - HTML file name</li> <li><code>parts</code> - Anchor parts</li> </ul>"},{"location":"mypy_boto3_builder/service_name/#signature_5","title":"Signature","text":"<pre><code>@staticmethod\ndef get_md_doc_link(\n    file: Literal[\n        \"client\", \"service_resource\", \"waiters\", \"paginators\", \"type_defs\", \"literals\"\n    ],\n    *parts: str\n) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameimport_name","title":"ServiceName().import_name","text":"<p>Show source in service_name.py:68</p> <p>Safe mudule import name.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_6","title":"Signature","text":"<pre><code>@property\ndef import_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameis_conda_forge_available","title":"ServiceName().is_conda_forge_available","text":"<p>Show source in service_name.py:92</p> <p>Whether service is available for <code>conda-forge</code>.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_7","title":"Signature","text":"<pre><code>def is_conda_forge_available(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameis_essential","title":"ServiceName().is_essential","text":"<p>Show source in service_name.py:86</p> <p>Whether service is included to <code>boto3-stubs[essential]</code>.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_8","title":"Signature","text":"<pre><code>def is_essential(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenameunderscore_name","title":"ServiceName().underscore_name","text":"<p>Show source in service_name.py:54</p> <p>Python-friendly service name.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_9","title":"Signature","text":"<pre><code>@property\ndef underscore_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenamecatalog","title":"ServiceNameCatalog","text":"<p>Show source in service_name.py:143</p> <p>Finder for boto3 services by name.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_10","title":"Signature","text":"<pre><code>class ServiceNameCatalog: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#servicenamecatalogadd","title":"ServiceNameCatalog.add","text":"<p>Show source in service_name.py:187</p> <p>Add new ServiceName to catalog or modify existing one.</p>"},{"location":"mypy_boto3_builder/service_name/#returns","title":"Returns","text":"<p>New ServiceName or modified if it exists.</p>"},{"location":"mypy_boto3_builder/service_name/#signature_11","title":"Signature","text":"<pre><code>@classmethod\ndef add(cls, name: str, class_name: str) -&gt; ServiceName: ...\n</code></pre>"},{"location":"mypy_boto3_builder/service_name/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/enums/","title":"Enums","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Enums</p> <p>Auto-generated documentation for mypy_boto3_builder.enums module.</p>"},{"location":"mypy_boto3_builder/enums/#modules","title":"Modules","text":"<ul> <li>ServiceModuleName</li> </ul>"},{"location":"mypy_boto3_builder/enums/service_module_name/","title":"ServiceModuleName","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Enums / ServiceModuleName</p> <p>Auto-generated documentation for mypy_boto3_builder.enums.service_module_name module.</p>"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulename_1","title":"ServiceModuleName","text":"<p>Show source in service_module_name.py:8</p> <p>Enum for service modules.</p>"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature","title":"Signature","text":"<pre><code>class ServiceModuleName(enum.Enum): ...\n</code></pre>"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulenamefile_name","title":"ServiceModuleName().file_name","text":"<p>Show source in service_module_name.py:27</p> <p>Module file name.</p>"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature_1","title":"Signature","text":"<pre><code>@property\ndef file_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulenamestub_file_name","title":"ServiceModuleName().stub_file_name","text":"<p>Show source in service_module_name.py:20</p> <p>Module file name.</p>"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature_2","title":"Signature","text":"<pre><code>@property\ndef stub_file_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulenametemplate_name","title":"ServiceModuleName().template_name","text":"<p>Show source in service_module_name.py:34</p> <p>Module template file name.</p>"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature_3","title":"Signature","text":"<pre><code>@property\ndef template_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/","title":"Generators","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators</p> <p>Auto-generated documentation for mypy_boto3_builder.generators module.</p>"},{"location":"mypy_boto3_builder/generators/#modules","title":"Modules","text":"<ul> <li>AioBoto3Generator</li> <li>AioBotocoreGenerator</li> <li>BaseGenerator</li> <li>Boto3Generator</li> </ul>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/","title":"AioBoto3Generator","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / AioBoto3Generator</p> <p>Auto-generated documentation for mypy_boto3_builder.generators.aioboto3_generator module.</p>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generator_1","title":"AioBoto3Generator","text":"<p>Show source in aioboto3_generator.py:18</p> <p>AioBoto3 stubs generator.</p>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature","title":"Signature","text":"<pre><code>class AioBoto3Generator(BaseGenerator): ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#see-also","title":"See also","text":"<ul> <li>BaseGenerator</li> </ul>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorgenerate_docs","title":"AioBoto3Generator().generate_docs","text":"<p>Show source in aioboto3_generator.py:75</p> <p>Generate service and master docs.</p>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_1","title":"Signature","text":"<pre><code>def generate_docs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorgenerate_service_stubs","title":"AioBoto3Generator().generate_service_stubs","text":"<p>Show source in aioboto3_generator.py:99</p> <p>Do nothing.</p>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_2","title":"Signature","text":"<pre><code>def generate_service_stubs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorgenerate_stubs","title":"AioBoto3Generator().generate_stubs","text":"<p>Show source in aioboto3_generator.py:38</p> <p>Generate <code>types-aioboto3</code> package.</p>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_3","title":"Signature","text":"<pre><code>def generate_stubs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorget_library_version","title":"AioBoto3Generator().get_library_version","text":"<p>Show source in aioboto3_generator.py:26</p> <p>Get underlying library version.</p>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_4","title":"Signature","text":"<pre><code>def get_library_version(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorget_postprocessor","title":"AioBoto3Generator().get_postprocessor","text":"<p>Show source in aioboto3_generator.py:32</p> <p>Get postprocessor for service package.</p>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_5","title":"Signature","text":"<pre><code>def get_postprocessor(\n    self, service_package: ServicePackage\n) -&gt; AioBotocorePostprocessor: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#see-also_1","title":"See also","text":"<ul> <li>AioBotocorePostprocessor</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/","title":"AioBotocoreGenerator","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / AioBotocoreGenerator</p> <p>Auto-generated documentation for mypy_boto3_builder.generators.aiobotocore_generator module.</p>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregenerator_1","title":"AioBotocoreGenerator","text":"<p>Show source in aiobotocore_generator.py:21</p> <p>AioBotocore stubs/docs generator.</p>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature","title":"Signature","text":"<pre><code>class AioBotocoreGenerator(BaseGenerator): ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#see-also","title":"See also","text":"<ul> <li>BaseGenerator</li> </ul>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorgenerate_docs","title":"AioBotocoreGenerator().generate_docs","text":"<p>Show source in aiobotocore_generator.py:78</p> <p>Generate service and master docs.</p>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_1","title":"Signature","text":"<pre><code>def generate_docs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorgenerate_stubs","title":"AioBotocoreGenerator().generate_stubs","text":"<p>Show source in aiobotocore_generator.py:41</p> <p>Generate <code>aiobotocore-stubs</code> package.</p>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_2","title":"Signature","text":"<pre><code>def generate_stubs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorget_library_version","title":"AioBotocoreGenerator().get_library_version","text":"<p>Show source in aiobotocore_generator.py:29</p> <p>Get underlying library version.</p>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_3","title":"Signature","text":"<pre><code>def get_library_version(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorget_postprocessor","title":"AioBotocoreGenerator().get_postprocessor","text":"<p>Show source in aiobotocore_generator.py:35</p> <p>Get postprocessor for service package.</p>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_4","title":"Signature","text":"<pre><code>def get_postprocessor(\n    self, service_package: ServicePackage\n) -&gt; AioBotocorePostprocessor: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#see-also_1","title":"See also","text":"<ul> <li>AioBotocorePostprocessor</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/generators/base_generator/","title":"BaseGenerator","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / BaseGenerator</p> <p>Auto-generated documentation for mypy_boto3_builder.generators.base_generator module.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#basegenerator_1","title":"BaseGenerator","text":"<p>Show source in base_generator.py:21</p> <p>Base stubs/docs generator.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#arguments","title":"Arguments","text":"<ul> <li><code>service_names</code> - Selected service names</li> <li><code>master_service_names</code> - Service names included in master</li> <li><code>output_path</code> - Path to write generated files</li> <li><code>generate_setup</code> - Whether to create package or installed module</li> <li><code>skip_published</code> - Whether to skip packages that are already published</li> <li><code>disable_smart_version</code> - Whether to create a new postrelease based on latest PyPI version</li> <li><code>version</code> - Package build version</li> </ul>"},{"location":"mypy_boto3_builder/generators/base_generator/#signature","title":"Signature","text":"<pre><code>class BaseGenerator(ABC):\n    def __init__(\n        self,\n        service_names: Sequence[ServiceName],\n        master_service_names: Sequence[ServiceName],\n        output_path: Path,\n        generate_setup: bool,\n        skip_published: bool,\n        disable_smart_version: bool,\n        version: str,\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/base_generator/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_docs","title":"BaseGenerator().generate_docs","text":"<p>Show source in base_generator.py:91</p> <p>Generate service and master docs.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_1","title":"Signature","text":"<pre><code>@abstractmethod\ndef generate_docs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_product","title":"BaseGenerator().generate_product","text":"<p>Show source in base_generator.py:97</p> <p>Run generator for a product type.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_2","title":"Signature","text":"<pre><code>def generate_product(self, product_type: ProductType) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/base_generator/#see-also_1","title":"See also","text":"<ul> <li>ProductType</li> </ul>"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_service_stubs","title":"BaseGenerator().generate_service_stubs","text":"<p>Show source in base_generator.py:184</p> <p>Generate service stubs.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_3","title":"Signature","text":"<pre><code>def generate_service_stubs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_stubs","title":"BaseGenerator().generate_stubs","text":"<p>Show source in base_generator.py:84</p> <p>Generate main stubs.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_4","title":"Signature","text":"<pre><code>@abstractmethod\ndef generate_stubs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorget_library_version","title":"BaseGenerator().get_library_version","text":"<p>Show source in base_generator.py:64</p> <p>Get underlying library version.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_5","title":"Signature","text":"<pre><code>@abstractmethod\ndef get_library_version(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorget_postprocessor","title":"BaseGenerator().get_postprocessor","text":"<p>Show source in base_generator.py:58</p> <p>Get postprocessor for service package.</p>"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_6","title":"Signature","text":"<pre><code>@abstractmethod\ndef get_postprocessor(self, service_package: ServicePackage) -&gt; BasePostprocessor: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/base_generator/#see-also_2","title":"See also","text":"<ul> <li>BasePostprocessor</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/generators/boto3_generator/","title":"Boto3Generator","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / Boto3Generator</p> <p>Auto-generated documentation for mypy_boto3_builder.generators.boto3_generator module.</p>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generator_1","title":"Boto3Generator","text":"<p>Show source in boto3_generator.py:23</p> <p>Boto3 stubs/docs generator.</p>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature","title":"Signature","text":"<pre><code>class Boto3Generator(BaseGenerator): ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#see-also","title":"See also","text":"<ul> <li>BaseGenerator</li> </ul>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorgenerate_docs","title":"Boto3Generator().generate_docs","text":"<p>Show source in boto3_generator.py:101</p> <p>Generate service and master docs.</p>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_1","title":"Signature","text":"<pre><code>def generate_docs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorgenerate_stubs","title":"Boto3Generator().generate_stubs","text":"<p>Show source in boto3_generator.py:91</p> <p>Generate main stubs.</p>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_2","title":"Signature","text":"<pre><code>def generate_stubs(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorget_library_version","title":"Boto3Generator().get_library_version","text":"<p>Show source in boto3_generator.py:31</p> <p>Get underlying library version.</p>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_3","title":"Signature","text":"<pre><code>def get_library_version(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorget_postprocessor","title":"Boto3Generator().get_postprocessor","text":"<p>Show source in boto3_generator.py:37</p> <p>Get postprocessor for service package.</p>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_4","title":"Signature","text":"<pre><code>def get_postprocessor(\n    self, service_package: ServicePackage\n) -&gt; BotocorePostprocessor: ...\n</code></pre>"},{"location":"mypy_boto3_builder/generators/boto3_generator/#see-also_1","title":"See also","text":"<ul> <li>BotocorePostprocessor</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/import_helpers/","title":"Import Helpers","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers</p> <p>Auto-generated documentation for mypy_boto3_builder.import_helpers module.</p>"},{"location":"mypy_boto3_builder/import_helpers/#modules","title":"Modules","text":"<ul> <li>ImportRecord</li> <li>ImportString</li> <li>InternalImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/import_helpers/import_record/","title":"ImportRecord","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / ImportRecord</p> <p>Auto-generated documentation for mypy_boto3_builder.import_helpers.import_record module.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecord_1","title":"ImportRecord","text":"<p>Show source in import_record.py:18</p> <p>Helper for Python import strings.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#arguments","title":"Arguments","text":"<ul> <li><code>source</code> - Source of import.</li> <li><code>name</code> - Import name.</li> <li><code>alias</code> - Import local name.</li> <li><code>min_version</code> - Minimum Python version, used for fallback.</li> <li><code>fallback</code> - Fallback ImportRecord.</li> </ul>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature","title":"Signature","text":"<pre><code>class ImportRecord:\n    def __init__(\n        self: _R,\n        source: ImportString,\n        name: str = \"\",\n        alias: str = \"\",\n        min_version: tuple[int, ...] | None = None,\n        fallback: _R | None = None,\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#see-also","title":"See also","text":"<ul> <li>ImportString</li> </ul>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordempty","title":"ImportRecord.empty","text":"<p>Show source in import_record.py:59</p> <p>Whether import record is an empty string.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_1","title":"Signature","text":"<pre><code>@classmethod\ndef empty(cls) -&gt; Self: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordget_local_name","title":"ImportRecord().get_local_name","text":"<p>Show source in import_record.py:117</p> <p>Get local import name.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_2","title":"Signature","text":"<pre><code>def get_local_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_builtins","title":"ImportRecord().is_builtins","text":"<p>Show source in import_record.py:123</p> <p>Whether import is from Python <code>builtins</code> module.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_3","title":"Signature","text":"<pre><code>def is_builtins(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_empty","title":"ImportRecord().is_empty","text":"<p>Show source in import_record.py:53</p> <p>Whether import record is an empty string.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_4","title":"Signature","text":"<pre><code>def is_empty(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_local","title":"ImportRecord().is_local","text":"<p>Show source in import_record.py:144</p> <p>Whether import is from local module.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_5","title":"Signature","text":"<pre><code>def is_local(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_third_party","title":"ImportRecord().is_third_party","text":"<p>Show source in import_record.py:135</p> <p>Whether import is from 3rd party module.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_6","title":"Signature","text":"<pre><code>def is_third_party(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_type_defs","title":"ImportRecord().is_type_defs","text":"<p>Show source in import_record.py:129</p> <p>Whether import is from <code>type_defs</code> module.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_7","title":"Signature","text":"<pre><code>def is_type_defs(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordneeds_sys_fallback","title":"ImportRecord().needs_sys_fallback","text":"<p>Show source in import_record.py:162</p> <p>Whether ImportString requires <code>sys</code> module.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_8","title":"Signature","text":"<pre><code>def needs_sys_fallback(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordrender","title":"ImportRecord().render","text":"<p>Show source in import_record.py:66</p> <p>Get rendered string.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_9","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/","title":"ImportString","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / ImportString</p> <p>Auto-generated documentation for mypy_boto3_builder.import_helpers.import_string module.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstring_1","title":"ImportString","text":"<p>Show source in import_string.py:12</p> <p>Wrapper for Python import strings.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#arguments","title":"Arguments","text":"<ul> <li><code>master</code> - Master module name</li> <li><code>parts</code> - Other import parts</li> </ul>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#examples","title":"Examples","text":"<pre><code>import_string = ImportString(\"my\", \"name\")\n\nstr(import_string)\n'my.name'\n\nimport_string.render()\n'my.name'\n\nimport_string.parts.append('test')\nimport_string.render()\n'my.name.test'\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature","title":"Signature","text":"<pre><code>class ImportString:\n    def __init__(self, master_name: str, *parts: str) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringempty","title":"ImportString.empty","text":"<p>Show source in import_string.py:50</p> <p>Create an empty ImportString.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_1","title":"Signature","text":"<pre><code>@classmethod\ndef empty(cls: type[_R]) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringfrom_str","title":"ImportString.from_str","text":"<p>Show source in import_string.py:43</p> <p>Create from string.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_2","title":"Signature","text":"<pre><code>@classmethod\ndef from_str(cls: type[_R], import_string: str) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringmaster_name","title":"ImportString().master_name","text":"<p>Show source in import_string.py:129</p> <p>Get first import string part or <code>builtins</code>.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_3","title":"Signature","text":"<pre><code>@property\ndef master_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringparent","title":"ImportString.parent","text":"<p>Show source in import_string.py:59</p> <p>Get parent ImportString.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_4","title":"Signature","text":"<pre><code>@classmethod\ndef parent(cls: type[_R]) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringrender","title":"ImportString().render","text":"<p>Show source in import_string.py:120</p> <p>Render to string.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#returns","title":"Returns","text":"<p>Ready to use import string.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_5","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringstartswith","title":"ImportString().startswith","text":"<p>Show source in import_string.py:88</p> <p>Check if import string starts with <code>other</code>.</p>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#examples_1","title":"Examples","text":"<pre><code>ImportString('my', 'name').startswith(ImportString('my'))\nTrue\n\nImportString('my_module', 'name').startswith(ImportString('my'))\nFalse\n\nImportString('my', 'name').startswith(ImportString('my, 'name'))\nTrue\n\nImportString('my', 'name').startswith(ImportString.empty())\nTrue\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#arguments_1","title":"Arguments","text":"<ul> <li><code>other</code> - Other import string.</li> </ul>"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_6","title":"Signature","text":"<pre><code>def startswith(self: _R, other: _R) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/","title":"InternalImportRecord","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / InternalImportRecord</p> <p>Auto-generated documentation for mypy_boto3_builder.import_helpers.internal_import_record module.</p>"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#internalimportrecord_1","title":"InternalImportRecord","text":"<p>Show source in internal_import_record.py:10</p> <p>Helper for Python import strings with not set master module name.</p>"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#arguments","title":"Arguments","text":"<ul> <li><code>service_module_name</code> - Service module name.</li> <li><code>name</code> - Import name.</li> <li><code>alias</code> - Import local name.</li> </ul>"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#signature","title":"Signature","text":"<pre><code>class InternalImportRecord(ImportRecord):\n    def __init__(\n        self, service_module_name: ServiceModuleName, name: str = \"\", alias: str = \"\"\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#see-also","title":"See also","text":"<ul> <li>ImportRecord</li> <li>ServiceModuleName</li> </ul>"},{"location":"mypy_boto3_builder/parsers/","title":"Parsers","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers module.</p>"},{"location":"mypy_boto3_builder/parsers/#modules","title":"Modules","text":"<ul> <li>Aiobotocore Stubs Package</li> <li>Boto3 Stubs Package</li> <li>Client</li> <li>Fake Service Package</li> <li>Helpers</li> <li>Master Package</li> <li>Parse Attributes</li> <li>Parse Collections</li> <li>Parse Identifiers</li> <li>Parse References</li> <li>Parse Resource</li> <li>ServicePackageParser</li> <li>Service Resource</li> <li>ShapeParser</li> <li>Types Aioboto3 Package</li> </ul>"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/","title":"Aiobotocore Stubs Package","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Aiobotocore Stubs Package</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.aiobotocore_stubs_package module.</p>"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#parse_aiobotocore_stubs_package","title":"parse_aiobotocore_stubs_package","text":"<p>Show source in aiobotocore_stubs_package.py:26</p> <p>Parse data for types-aiobotocore package.</p>"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>service_names</code> - All available service names</li> <li><code>package_data</code> - Package data</li> </ul>"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#returns","title":"Returns","text":"<p>AioBotocoreStubsPackage structure.</p>"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#signature","title":"Signature","text":"<pre><code>def parse_aiobotocore_stubs_package(\n    session: Session,\n    service_names: Iterable[ServiceName],\n    package_data: type[BasePackageData],\n) -&gt; AioBotocoreStubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#see-also","title":"See also","text":"<ul> <li>AioBotocoreStubsPackage</li> <li>BasePackageData</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/","title":"Boto3 Stubs Package","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Boto3 Stubs Package</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.boto3_stubs_package module.</p>"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#parse_boto3_stubs_package","title":"parse_boto3_stubs_package","text":"<p>Show source in boto3_stubs_package.py:28</p> <p>Parse data for boto3-stubs package.</p>"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>service_names</code> - All available service names</li> <li><code>package_data</code> - Package data</li> </ul>"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#returns","title":"Returns","text":"<p>Boto3StubsPackage structure.</p>"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#signature","title":"Signature","text":"<pre><code>def parse_boto3_stubs_package(\n    session: Session,\n    service_names: Iterable[ServiceName],\n    package_data: type[BasePackageData],\n) -&gt; Boto3StubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>Boto3StubsPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/parsers/client/","title":"Client","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Client</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.client module.</p>"},{"location":"mypy_boto3_builder/parsers/client/#parse_client","title":"parse_client","text":"<p>Show source in client.py:26</p> <p>Parse boto3 client to a structure.</p>"},{"location":"mypy_boto3_builder/parsers/client/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_name</code> - Target service name.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/client/#returns","title":"Returns","text":"<p>Client structure.</p>"},{"location":"mypy_boto3_builder/parsers/client/#signature","title":"Signature","text":"<pre><code>def parse_client(\n    session: Session, service_name: ServiceName, shape_parser: ShapeParser\n) -&gt; Client: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/client/#see-also","title":"See also","text":"<ul> <li>Client</li> <li>ServiceName</li> <li>ShapeParser</li> </ul>"},{"location":"mypy_boto3_builder/parsers/fake_service_package/","title":"Fake Service Package","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Fake Service Package</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.fake_service_package module.</p>"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#parse_fake_service_package","title":"parse_fake_service_package","text":"<p>Show source in fake_service_package.py:20</p> <p>Create fake boto3 service module structure.</p> <p>Used by stubs and master package.</p>"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_name</code> - Target service name.</li> <li><code>package_data</code> - Package data.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#returns","title":"Returns","text":"<p>ServiceModule structure.</p>"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#signature","title":"Signature","text":"<pre><code>def parse_fake_service_package(\n    session: Session, service_name: ServiceName, package_data: type[BasePackageData]\n) -&gt; ServicePackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>ServiceName</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/parsers/helpers/","title":"Helpers","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Helpers</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.helpers module.</p>"},{"location":"mypy_boto3_builder/parsers/helpers/#get_dummy_method","title":"get_dummy_method","text":"<p>Show source in helpers.py:37</p> <p>Get a dummy method in case we cannot parse it.</p>"},{"location":"mypy_boto3_builder/parsers/helpers/#arguments","title":"Arguments","text":"<ul> <li><code>name</code> - Method name.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/helpers/#returns","title":"Returns","text":"<p>Method structure.</p>"},{"location":"mypy_boto3_builder/parsers/helpers/#signature","title":"Signature","text":"<pre><code>def get_dummy_method(name: str) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/helpers/#see-also","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/helpers/#get_public_methods","title":"get_public_methods","text":"<p>Show source in helpers.py:13</p> <p>Extract public methods from any class.</p>"},{"location":"mypy_boto3_builder/parsers/helpers/#arguments_1","title":"Arguments","text":"<ul> <li><code>inspect_class</code> - Inspect class.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/helpers/#returns_1","title":"Returns","text":"<p>A dictionary of method name and method.</p>"},{"location":"mypy_boto3_builder/parsers/helpers/#signature_1","title":"Signature","text":"<pre><code>def get_public_methods(inspect_class: object) -&gt; dict[str, MethodType]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/master_package/","title":"Master Package","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Master Package</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.master_package module.</p>"},{"location":"mypy_boto3_builder/parsers/master_package/#parse_master_package","title":"parse_master_package","text":"<p>Show source in master_package.py:17</p> <p>Parse data for master package.</p>"},{"location":"mypy_boto3_builder/parsers/master_package/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_names</code> - All available service names.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/master_package/#returns","title":"Returns","text":"<p>MasterPackage structure.</p>"},{"location":"mypy_boto3_builder/parsers/master_package/#signature","title":"Signature","text":"<pre><code>def parse_master_package(\n    session: Session, service_names: Iterable[ServiceName]\n) -&gt; MasterPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/master_package/#see-also","title":"See also","text":"<ul> <li>MasterPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_attributes/","title":"Parse Attributes","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Attributes</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.parse_attributes module.</p>"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#parse_attributes","title":"parse_attributes","text":"<p>Show source in parse_attributes.py:13</p> <p>Extract attributes from boto3 resource.</p>"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#arguments","title":"Arguments","text":"<ul> <li><code>resource</code> - boto3 service resource.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#returns","title":"Returns","text":"<p>A list of Attribute structures.</p>"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#signature","title":"Signature","text":"<pre><code>def parse_attributes(\n    service_name: ServiceName,\n    resource_name: str,\n    resource: Boto3ServiceResource,\n    shape_parser: ShapeParser,\n) -&gt; list[Attribute]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#see-also","title":"See also","text":"<ul> <li>Attribute</li> <li>ServiceName</li> <li>ShapeParser</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_collections/","title":"Parse Collections","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Collections</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.parse_collections module.</p>"},{"location":"mypy_boto3_builder/parsers/parse_collections/#parse_collections","title":"parse_collections","text":"<p>Show source in parse_collections.py:18</p> <p>Extract collections from boto3 resource.</p>"},{"location":"mypy_boto3_builder/parsers/parse_collections/#arguments","title":"Arguments","text":"<ul> <li><code>resource</code> - boto3 service resource.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_collections/#returns","title":"Returns","text":"<p>A list of Collection structures.</p>"},{"location":"mypy_boto3_builder/parsers/parse_collections/#signature","title":"Signature","text":"<pre><code>def parse_collections(\n    parent_name: str,\n    resource: Boto3ServiceResource,\n    service_name: ServiceName,\n    shape_parser: ShapeParser,\n) -&gt; list[Collection]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/parse_collections/#see-also","title":"See also","text":"<ul> <li>Collection</li> <li>ServiceName</li> <li>ShapeParser</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/","title":"Parse Identifiers","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Identifiers</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.parse_identifiers module.</p>"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#parse_identifiers","title":"parse_identifiers","text":"<p>Show source in parse_identifiers.py:11</p> <p>Extract identifiers from boto3 resource.</p>"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#arguments","title":"Arguments","text":"<ul> <li><code>resource</code> - boto3 service resource.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#returns","title":"Returns","text":"<p>A list of Attribute structures.</p>"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#signature","title":"Signature","text":"<pre><code>def parse_identifiers(resource: Boto3ServiceResource) -&gt; list[Attribute]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#see-also","title":"See also","text":"<ul> <li>Attribute</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_references/","title":"Parse References","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse References</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.parse_references module.</p>"},{"location":"mypy_boto3_builder/parsers/parse_references/#parse_references","title":"parse_references","text":"<p>Show source in parse_references.py:14</p> <p>Extract references from boto3 resource.</p>"},{"location":"mypy_boto3_builder/parsers/parse_references/#arguments","title":"Arguments","text":"<ul> <li><code>resource</code> - boto3 service resource.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_references/#returns","title":"Returns","text":"<p>A list of Attribute structures.</p>"},{"location":"mypy_boto3_builder/parsers/parse_references/#signature","title":"Signature","text":"<pre><code>def parse_references(resource: Boto3ServiceResource) -&gt; list[Attribute]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/parse_references/#see-also","title":"See also","text":"<ul> <li>Attribute</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_resource/","title":"Parse Resource","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Resource</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.parse_resource module.</p>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#get_resource_public_methods","title":"get_resource_public_methods","text":"<p>Show source in parse_resource.py:86</p> <p>Extract public methods from boto3 sub resource.</p>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#arguments","title":"Arguments","text":"<ul> <li><code>resource_class</code> - boto3 resource meta.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#returns","title":"Returns","text":"<p>A dictionary of method name and method.</p>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#signature","title":"Signature","text":"<pre><code>def get_resource_public_methods(\n    resource_class: type[Boto3ServiceResource],\n) -&gt; dict[str, MethodType]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#parse_resource","title":"parse_resource","text":"<p>Show source in parse_resource.py:26</p> <p>Parse boto3 sub Resource data.</p>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#arguments_1","title":"Arguments","text":"<ul> <li><code>resource</code> - Original boto3 resource.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#returns_1","title":"Returns","text":"<p>Resource structure.</p>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#signature_1","title":"Signature","text":"<pre><code>def parse_resource(\n    name: str,\n    resource: Boto3ServiceResource,\n    service_name: ServiceName,\n    shape_parser: ShapeParser,\n) -&gt; Resource: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/parse_resource/#see-also","title":"See also","text":"<ul> <li>Resource</li> <li>ServiceName</li> <li>ShapeParser</li> </ul>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/","title":"ServicePackageParser","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / ServicePackageParser</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.service_package_parser module.</p>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#servicepackageparser_1","title":"ServicePackageParser","text":"<p>Show source in service_package_parser.py:25</p> <p>Parser that produces <code>structures.ServicePackage</code>.</p>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_name</code> - Target service name.</li> <li><code>package_data</code> - Package data.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#returns","title":"Returns","text":"<p>ServiceModule structure.</p>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#signature","title":"Signature","text":"<pre><code>class ServicePackageParser:\n    def __init__(\n        self,\n        session: Session,\n        service_name: ServiceName,\n        package_data: type[BasePackageData],\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#servicepackageparserparse","title":"ServicePackageParser().parse","text":"<p>Show source in service_package_parser.py:50</p> <p>Extract all data from boto3 service package.</p>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#signature_1","title":"Signature","text":"<pre><code>def parse(self) -&gt; ServicePackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/service_package_parser/#see-also_1","title":"See also","text":"<ul> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/parsers/service_resource/","title":"Service Resource","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Service Resource</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.service_resource module.</p>"},{"location":"mypy_boto3_builder/parsers/service_resource/#get_sub_resources","title":"get_sub_resources","text":"<p>Show source in service_resource.py:112</p> <p>Initialize ServiceResource sub-resources with fake data.</p>"},{"location":"mypy_boto3_builder/parsers/service_resource/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_name</code> - Target service name.</li> <li><code>resource</code> - Parent ServiceResource.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/service_resource/#returns","title":"Returns","text":"<p>A list of initialized <code>Boto3ServiceResource</code>.</p>"},{"location":"mypy_boto3_builder/parsers/service_resource/#signature","title":"Signature","text":"<pre><code>def get_sub_resources(\n    session: Session, service_name: ServiceName, resource: Boto3ServiceResource\n) -&gt; list[Boto3ServiceResource]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/service_resource/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/parsers/service_resource/#parse_service_resource","title":"parse_service_resource","text":"<p>Show source in service_resource.py:35</p> <p>Parse boto3 ServiceResource data.</p>"},{"location":"mypy_boto3_builder/parsers/service_resource/#arguments_1","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_name</code> - Target service name.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/service_resource/#returns_1","title":"Returns","text":"<p>ServiceResource structure or None if service does not have a resource.</p>"},{"location":"mypy_boto3_builder/parsers/service_resource/#signature_1","title":"Signature","text":"<pre><code>def parse_service_resource(\n    session: Session, service_name: ServiceName, shape_parser: ShapeParser\n) -&gt; ServiceResource | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/service_resource/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> <li>ShapeParser</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/","title":"ShapeParser","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / ShapeParser</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.shape_parser module.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparser_1","title":"ShapeParser","text":"<p>Show source in shape_parser.py:66</p> <p>Parser for botocore shape files.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - Boto3 session.</li> <li><code>service_name</code> - ServiceName.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature","title":"Signature","text":"<pre><code>class ShapeParser:\n    def __init__(self, session: Session, service_name: ServiceName): ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserfix_method_arguments_for_mypy","title":"ShapeParser().fix_method_arguments_for_mypy","text":"<p>Show source in shape_parser.py:979</p> <p>Accept both input and output shapes in method arguments.</p> <p>mypy does not compare TypedDicts, so we need to accept both input and output shapes. https://github.com/youtype/mypy_boto3_builder/issues/209</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_1","title":"Signature","text":"<pre><code>def fix_method_arguments_for_mypy(self, methods: Sequence[Method]) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_1","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserfix_typed_dict_names","title":"ShapeParser().fix_typed_dict_names","text":"<p>Show source in shape_parser.py:906</p> <p>Fix typed dict names to avoid duplicates.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_2","title":"Signature","text":"<pre><code>def fix_typed_dict_names(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_client_method_map","title":"ShapeParser().get_client_method_map","text":"<p>Show source in shape_parser.py:230</p> <p>Get client methods from shape.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns","title":"Returns","text":"<p>A map of method name to Method.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_3","title":"Signature","text":"<pre><code>def get_client_method_map(self) -&gt; dict[str, Method]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_2","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_collection_batch_methods","title":"ShapeParser().get_collection_batch_methods","text":"<p>Show source in shape_parser.py:831</p> <p>Get batch operations for Resource collection.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_1","title":"Arguments","text":"<ul> <li><code>name</code> - Collection record name.</li> <li><code>collection</code> - Boto3 Collection.</li> <li><code>class_type</code> - Collection self type annotation.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_1","title":"Returns","text":"<p>List of Method records.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_4","title":"Signature","text":"<pre><code>def get_collection_batch_methods(\n    self, name: str, collection: Collection\n) -&gt; list[Method]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_3","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_collection_filter_method","title":"ShapeParser().get_collection_filter_method","text":"<p>Show source in shape_parser.py:793</p> <p>Get <code>filter</code> classmethod for Resource collection.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_2","title":"Arguments","text":"<ul> <li><code>name</code> - Collection record name.</li> <li><code>collection</code> - Boto3 Collection.</li> <li><code>class_type</code> - Collection class type annotation.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_2","title":"Returns","text":"<p>Filter Method record.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_5","title":"Signature","text":"<pre><code>def get_collection_filter_method(\n    self, name: str, collection: Collection, self_type: FakeAnnotation\n) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_4","title":"See also","text":"<ul> <li>FakeAnnotation</li> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_paginate_method","title":"ShapeParser().get_paginate_method","text":"<p>Show source in shape_parser.py:539</p> <p>Get Paginator <code>paginate</code> method.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_3","title":"Arguments","text":"<ul> <li><code>paginator_name</code> - Paginator name.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_3","title":"Returns","text":"<p>Method.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_6","title":"Signature","text":"<pre><code>def get_paginate_method(self, paginator_name: str) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_5","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_paginator_names","title":"ShapeParser().get_paginator_names","text":"<p>Show source in shape_parser.py:148</p> <p>Get available paginator names.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_4","title":"Returns","text":"<p>A list of paginator names.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_7","title":"Signature","text":"<pre><code>def get_paginator_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_resource_method_map","title":"ShapeParser().get_resource_method_map","text":"<p>Show source in shape_parser.py:663</p> <p>Get methods for Resource.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_4","title":"Arguments","text":"<ul> <li>ShapeParser().resource_name - Resource name.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_5","title":"Returns","text":"<p>A map of method name to Method.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_8","title":"Signature","text":"<pre><code>def get_resource_method_map(self, resource_name: str) -&gt; dict[str, Method]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_6","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_service_resource_method_map","title":"ShapeParser().get_service_resource_method_map","text":"<p>Show source in shape_parser.py:628</p> <p>Get methods for ServiceResource.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_6","title":"Returns","text":"<p>A map of method name to Method.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_9","title":"Signature","text":"<pre><code>def get_service_resource_method_map(self) -&gt; dict[str, Method]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_7","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_wait_method","title":"ShapeParser().get_wait_method","text":"<p>Show source in shape_parser.py:595</p> <p>Get Waiter <code>wait</code> method.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_5","title":"Arguments","text":"<ul> <li><code>waiter_name</code> - Waiter name.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_7","title":"Returns","text":"<p>Method.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_10","title":"Signature","text":"<pre><code>def get_wait_method(self, waiter_name: str) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_8","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserparse_shape","title":"ShapeParser().parse_shape","text":"<p>Show source in shape_parser.py:457</p> <p>Parse any botocore shape to TypeAnnotation.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_6","title":"Arguments","text":"<ul> <li><code>shape</code> - Botocore shape.</li> <li><code>output</code> - Whether shape should use strict output types.</li> <li><code>output_child</code> - Whether shape parent is marked as output.</li> <li><code>is_streaming</code> - Whether shape should be streaming.</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_8","title":"Returns","text":"<p>TypeAnnotation or similar class.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_11","title":"Signature","text":"<pre><code>def parse_shape(\n    self,\n    shape: Shape,\n    output: bool = False,\n    output_child: bool = False,\n    is_streaming: bool = False,\n) -&gt; FakeAnnotation: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_9","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserresource_name","title":"ShapeParser().resource_name","text":"<p>Show source in shape_parser.py:106</p> <p>Parsed resource name.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_12","title":"Signature","text":"<pre><code>@property\ndef resource_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparsererror","title":"ShapeParserError","text":"<p>Show source in shape_parser.py:60</p> <p>Main error for ShapeParser.</p>"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_13","title":"Signature","text":"<pre><code>class ShapeParserError(Exception): ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/","title":"Types Aioboto3 Package","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Types Aioboto3 Package</p> <p>Auto-generated documentation for mypy_boto3_builder.parsers.types_aioboto3_package module.</p>"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#parse_types_aioboto3_package","title":"parse_types_aioboto3_package","text":"<p>Show source in types_aioboto3_package.py:25</p> <p>Parse data for types-aioboto3 package.</p>"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>service_names</code> - All available service names</li> <li><code>package_data</code> - Package data</li> </ul>"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#returns","title":"Returns","text":"<p>AioBotocoreStubsPackage structure.</p>"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#signature","title":"Signature","text":"<pre><code>def parse_types_aioboto3_package(\n    session: Session,\n    service_names: Iterable[ServiceName],\n    package_data: type[BasePackageData],\n) -&gt; TypesAioBoto3Package: ...\n</code></pre>"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>ServiceName</li> <li>TypesAioBoto3Package</li> </ul>"},{"location":"mypy_boto3_builder/postprocessors/","title":"Postprocessors","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors</p> <p>Auto-generated documentation for mypy_boto3_builder.postprocessors module.</p>"},{"location":"mypy_boto3_builder/postprocessors/#modules","title":"Modules","text":"<ul> <li>Aiobotocore</li> <li>Base</li> <li>Botocore</li> </ul>"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/","title":"Aiobotocore","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Aiobotocore</p> <p>Auto-generated documentation for mypy_boto3_builder.postprocessors.aiobotocore module.</p>"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#aiobotocorepostprocessor","title":"AioBotocorePostprocessor","text":"<p>Show source in aiobotocore.py:31</p> <p>Postprocessor for aiobotocore classes and methods.</p>"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#signature","title":"Signature","text":"<pre><code>class AioBotocorePostprocessor(BasePostprocessor): ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#see-also","title":"See also","text":"<ul> <li>BasePostprocessor</li> </ul>"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#aiobotocorepostprocessorprocess_package","title":"AioBotocorePostprocessor().process_package","text":"<p>Show source in aiobotocore.py:79</p> <p>Convert all methods to asynchronous.</p>"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#signature_1","title":"Signature","text":"<pre><code>def process_package(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/base/","title":"Base","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Base</p> <p>Auto-generated documentation for mypy_boto3_builder.postprocessors.base module.</p>"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessor","title":"BasePostprocessor","text":"<p>Show source in base.py:20</p> <p>Base postprocessor for classes and methods.</p>"},{"location":"mypy_boto3_builder/postprocessors/base/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - Boto3 session</li> <li><code>package</code> - Service package</li> <li><code>service_names</code> - Available service names</li> </ul>"},{"location":"mypy_boto3_builder/postprocessors/base/#signature","title":"Signature","text":"<pre><code>class BasePostprocessor(ABC):\n    def __init__(\n        self,\n        session: Session,\n        package: ServicePackage,\n        service_names: Sequence[ServiceName],\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/base/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorextend_literals","title":"BasePostprocessor().extend_literals","text":"<p>Show source in base.py:182</p> <p>Add extra literals.</p> <ul> <li><code>&lt;Class&gt;ServiceName</code></li> <li><code>ServiceName</code></li> <li><code>ResourceServiceName</code></li> <li><code>PaginatorName</code></li> <li><code>WaiterName</code></li> <li><code>RegionName</code></li> </ul>"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_1","title":"Signature","text":"<pre><code>def extend_literals(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorgenerate_docstrings","title":"BasePostprocessor().generate_docstrings","text":"<p>Show source in base.py:42</p> <p>Generate all docstrings.</p>"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_2","title":"Signature","text":"<pre><code>def generate_docstrings(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorprocess_package","title":"BasePostprocessor().process_package","text":"<p>Show source in base.py:53</p> <p>Postprocess built package.</p>"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_3","title":"Signature","text":"<pre><code>@abstractmethod\ndef process_package(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorreplace_self_ref_typed_dicts","title":"BasePostprocessor().replace_self_ref_typed_dicts","text":"<p>Show source in base.py:265</p> <p>Remove self-references from TypedDicts.</p>"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_4","title":"Signature","text":"<pre><code>def replace_self_ref_typed_dicts(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/botocore/","title":"Botocore","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Botocore</p> <p>Auto-generated documentation for mypy_boto3_builder.postprocessors.botocore module.</p>"},{"location":"mypy_boto3_builder/postprocessors/botocore/#botocorepostprocessor","title":"BotocorePostprocessor","text":"<p>Show source in botocore.py:8</p> <p>Postprocessor for botocore classes and methods.</p>"},{"location":"mypy_boto3_builder/postprocessors/botocore/#signature","title":"Signature","text":"<pre><code>class BotocorePostprocessor(BasePostprocessor): ...\n</code></pre>"},{"location":"mypy_boto3_builder/postprocessors/botocore/#see-also","title":"See also","text":"<ul> <li>BasePostprocessor</li> </ul>"},{"location":"mypy_boto3_builder/postprocessors/botocore/#botocorepostprocessorprocess_package","title":"BotocorePostprocessor().process_package","text":"<p>Show source in botocore.py:13</p> <p>Leave package as it is.</p>"},{"location":"mypy_boto3_builder/postprocessors/botocore/#signature_1","title":"Signature","text":"<pre><code>def process_package(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/","title":"Structures","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures</p> <p>Auto-generated documentation for mypy_boto3_builder.structures module.</p>"},{"location":"mypy_boto3_builder/structures/#modules","title":"Modules","text":"<ul> <li>AioBotocoreStubsPackage</li> <li>Argument</li> <li>Attribute</li> <li>Boto3StubsPackage</li> <li>ClassRecord</li> <li>Client</li> <li>Collection</li> <li>Function</li> <li>MasterPackage</li> <li>Method</li> <li>Package</li> <li>Paginator</li> <li>Resource</li> <li>ServicePackage</li> <li>ServiceResource</li> <li>TypesAioBoto3Package</li> <li>Waiter</li> </ul>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/","title":"AioBotocoreStubsPackage","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / AioBotocoreStubsPackage</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.aiobotocore_stubs_package module.</p>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackage_1","title":"AioBotocoreStubsPackage","text":"<p>Show source in aiobotocore_stubs_package.py:16</p> <p>Structure for types-aiobotocore module.</p>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature","title":"Signature","text":"<pre><code>class AioBotocoreStubsPackage(Package):\n    def __init__(\n        self,\n        data: type[BasePackageData],\n        session_class: ClassRecord | None = None,\n        service_names: Iterable[ServiceName] = (),\n        service_packages: Iterable[ServicePackage] = (),\n        init_functions: Iterable[Function] = (),\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>Function</li> <li>Package</li> <li>ServiceName</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackageessential_service_names","title":"AioBotocoreStubsPackage().essential_service_names","text":"<p>Show source in aiobotocore_stubs_package.py:35</p> <p>Service names marked as essential.</p>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature_1","title":"Signature","text":"<pre><code>@property\ndef essential_service_names(self) -&gt; list[ServiceName]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackageget_all_names","title":"AioBotocoreStubsPackage().get_all_names","text":"<p>Show source in aiobotocore_stubs_package.py:53</p> <p>Get names for <code>__all__</code> directive.</p>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature_2","title":"Signature","text":"<pre><code>def get_all_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackageget_session_required_import_records","title":"AioBotocoreStubsPackage().get_session_required_import_records","text":"<p>Show source in aiobotocore_stubs_package.py:46</p> <p>Get import records for <code>session.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature_3","title":"Signature","text":"<pre><code>def get_session_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#see-also_2","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/argument/","title":"Argument","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Argument</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.argument module.</p>"},{"location":"mypy_boto3_builder/structures/argument/#argument_1","title":"Argument","text":"<p>Show source in argument.py:14</p> <p>Method or function argument.</p>"},{"location":"mypy_boto3_builder/structures/argument/#arguments","title":"Arguments","text":"<ul> <li><code>name</code> - Argument name.</li> <li><code>type_annotation</code> - Argument type annotation.</li> <li><code>value</code> - Default argument value.</li> <li><code>prefix</code> - Used for starargs.</li> </ul>"},{"location":"mypy_boto3_builder/structures/argument/#signature","title":"Signature","text":"<pre><code>class Argument:\n    def __init__(\n        self,\n        name: str,\n        type_annotation: FakeAnnotation | None,\n        default: TypeConstant | None = None,\n        prefix: Literal[\"*\", \"**\", \"\"] = \"\",\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/argument/#argumentcopy","title":"Argument().copy","text":"<p>Show source in argument.py:84</p> <p>Deep copy argument.</p>"},{"location":"mypy_boto3_builder/structures/argument/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/argument/#argumentcopy_1","title":"Argument().copy","text":"<p>Show source in argument.py:78</p> <p>Deep copy argument.</p>"},{"location":"mypy_boto3_builder/structures/argument/#signature_2","title":"Signature","text":"<pre><code>def copy(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/argument/#argumentis_kwflag","title":"Argument().is_kwflag","text":"<p>Show source in argument.py:56</p> <p>Whether argument is a <code>*</code> keywords separator.</p>"},{"location":"mypy_boto3_builder/structures/argument/#signature_3","title":"Signature","text":"<pre><code>def is_kwflag(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/argument/#argumentiterate_types","title":"Argument().iterate_types","text":"<p>Show source in argument.py:62</p> <p>Extract required type annotations.</p>"},{"location":"mypy_boto3_builder/structures/argument/#signature_4","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/argument/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/argument/#argumentkwflag","title":"Argument.kwflag","text":"<p>Show source in argument.py:49</p> <p>Create <code>*</code> keywords separator.</p>"},{"location":"mypy_boto3_builder/structures/argument/#signature_5","title":"Signature","text":"<pre><code>@classmethod\ndef kwflag(cls: type[_R]) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/argument/#argumentrender","title":"Argument().render","text":"<p>Show source in argument.py:37</p> <p>Render argument to a string.</p>"},{"location":"mypy_boto3_builder/structures/argument/#signature_6","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/argument/#argumentrequired","title":"Argument().required","text":"<p>Show source in argument.py:71</p> <p>Whether argument does not have a default value and is required.</p>"},{"location":"mypy_boto3_builder/structures/argument/#signature_7","title":"Signature","text":"<pre><code>@property\ndef required(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/attribute/","title":"Attribute","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Attribute</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.attribute module.</p>"},{"location":"mypy_boto3_builder/structures/attribute/#attribute_1","title":"Attribute","text":"<p>Show source in attribute.py:11</p> <p>Class or module attribute.</p>"},{"location":"mypy_boto3_builder/structures/attribute/#attributes","title":"Attributes","text":"<ul> <li><code>name</code> - Attribute name.</li> <li><code>type</code> - Attribute type annotation.</li> <li><code>value</code> - Attribute value.</li> <li><code>type_ignore</code> - Add type: ignore comment.</li> <li><code>is_reference</code> - Whether the attribute parsed from references.</li> <li><code>is_identifier</code> - Whether the attribute parsed from identifiers.</li> <li><code>is_collection</code> - Whether the attribute parsed from collections.</li> </ul>"},{"location":"mypy_boto3_builder/structures/attribute/#signature","title":"Signature","text":"<pre><code>class Attribute:\n    def __init__(\n        self,\n        name: str,\n        type_annotation: FakeAnnotation,\n        value: TypeConstant | None = None,\n        type_ignore: bool = False,\n        is_reference: bool = False,\n        is_identifier: bool = False,\n        is_collection: bool = False,\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/attribute/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/attribute/#attributeis_autoload_property","title":"Attribute().is_autoload_property","text":"<p>Show source in attribute.py:61</p> <p>Whether the attribute is an autoload property.</p>"},{"location":"mypy_boto3_builder/structures/attribute/#signature_1","title":"Signature","text":"<pre><code>def is_autoload_property(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/attribute/#attributeiterate_types","title":"Attribute().iterate_types","text":"<p>Show source in attribute.py:43</p> <p>Iterate over all type annotations used.</p>"},{"location":"mypy_boto3_builder/structures/attribute/#yields","title":"Yields","text":"<p>Type annotation.</p>"},{"location":"mypy_boto3_builder/structures/attribute/#signature_2","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/attribute/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/attribute/#attributerender","title":"Attribute().render","text":"<p>Show source in attribute.py:52</p> <p>Render to a string.</p>"},{"location":"mypy_boto3_builder/structures/attribute/#signature_3","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/","title":"Boto3StubsPackage","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Boto3StubsPackage</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.boto3_stubs_package module.</p>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackage_1","title":"Boto3StubsPackage","text":"<p>Show source in boto3_stubs_package.py:17</p> <p>Structure for boto3-stubs module.</p>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature","title":"Signature","text":"<pre><code>class Boto3StubsPackage(Package):\n    def __init__(\n        self,\n        data: type[BasePackageData],\n        session_class: ClassRecord | None = None,\n        service_names: Iterable[ServiceName] = (),\n        service_packages: Iterable[ServicePackage] = (),\n        init_functions: Iterable[Function] = (),\n        literals: Iterable[TypeLiteral] = (),\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>Function</li> <li>Package</li> <li>ServiceName</li> <li>ServicePackage</li> <li>TypeLiteral</li> </ul>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageessential_service_names","title":"Boto3StubsPackage().essential_service_names","text":"<p>Show source in boto3_stubs_package.py:38</p> <p>Service names marked as essential.</p>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_1","title":"Signature","text":"<pre><code>@property\ndef essential_service_names(self) -&gt; list[ServiceName]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageget_all_names","title":"Boto3StubsPackage().get_all_names","text":"<p>Show source in boto3_stubs_package.py:66</p> <p>Get names for <code>__all__</code> directive.</p>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_2","title":"Signature","text":"<pre><code>def get_all_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageget_init_required_import_records","title":"Boto3StubsPackage().get_init_required_import_records","text":"<p>Show source in boto3_stubs_package.py:49</p> <p>Get import records for <code>__init__.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_3","title":"Signature","text":"<pre><code>def get_init_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also_2","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageget_session_required_import_records","title":"Boto3StubsPackage().get_session_required_import_records","text":"<p>Show source in boto3_stubs_package.py:59</p> <p>Get import records for <code>session.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_4","title":"Signature","text":"<pre><code>def get_session_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also_3","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/class_record/","title":"ClassRecord","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ClassRecord</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.class_record module.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecord_1","title":"ClassRecord","text":"<p>Show source in class_record.py:16</p> <p>Base class for all structures that can be rendered to a class.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature","title":"Signature","text":"<pre><code>class ClassRecord:\n    def __init__(\n        self,\n        name: str,\n        methods: Iterable[Method] = (),\n        attributes: Iterable[Attribute] = (),\n        bases: Iterable[FakeAnnotation] = (),\n        use_alias: bool = False,\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#see-also","title":"See also","text":"<ul> <li>Attribute</li> <li>FakeAnnotation</li> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordalias_name","title":"ClassRecord().alias_name","text":"<p>Show source in class_record.py:45</p> <p>Class alias name for safe import.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_1","title":"Signature","text":"<pre><code>@property\ndef alias_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordboto3_doc_link","title":"ClassRecord().boto3_doc_link","text":"<p>Show source in class_record.py:38</p> <p>Link to boto3 docs.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_2","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordget_internal_imports","title":"ClassRecord().get_internal_imports","text":"<p>Show source in class_record.py:77</p> <p>Get internal imports from methods.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_3","title":"Signature","text":"<pre><code>def get_internal_imports(self) -&gt; set[InternalImport]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_1","title":"See also","text":"<ul> <li>InternalImport</li> </ul>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordget_method","title":"ClassRecord().get_method","text":"<p>Show source in class_record.py:104</p> <p>Get method by name.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_4","title":"Signature","text":"<pre><code>def get_method(self, name: str) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_2","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordget_required_import_records","title":"ClassRecord().get_required_import_records","text":"<p>Show source in class_record.py:67</p> <p>Extract import records from required type annotations.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_5","title":"Signature","text":"<pre><code>def get_required_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_3","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecorditerate_types","title":"ClassRecord().iterate_types","text":"<p>Show source in class_record.py:56</p> <p>Iterate over type annotations for methods, attributes and bases.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_6","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_4","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordmethod_names","title":"ClassRecord().method_names","text":"<p>Show source in class_record.py:97</p> <p>Unique method names.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_7","title":"Signature","text":"<pre><code>@property\ndef method_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordvariable_name","title":"ClassRecord().variable_name","text":"<p>Show source in class_record.py:90</p> <p>Variable name for an instance of this class.</p>"},{"location":"mypy_boto3_builder/structures/class_record/#signature_8","title":"Signature","text":"<pre><code>@property\ndef variable_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/","title":"Client","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Client</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.client module.</p>"},{"location":"mypy_boto3_builder/structures/client/#client_1","title":"Client","text":"<p>Show source in client.py:21</p> <p>Boto3 Client.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature","title":"Signature","text":"<pre><code>class Client(ClassRecord):\n    def __init__(\n        self, name: str, service_name: ServiceName, boto3_client: BaseClient\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#see-also","title":"See also","text":"<ul> <li>ClassRecord</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/client/#clienthash","title":"Client().hash","text":"<p>Show source in client.py:57</p> <p>Calculate hash from client service name.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_1","title":"Signature","text":"<pre><code>def __hash__(self) -&gt; int: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#clientboto3_doc_link","title":"Client().boto3_doc_link","text":"<p>Show source in client.py:70</p> <p>List to boto3 docs page.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_2","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#clientget_all_names","title":"Client().get_all_names","text":"<p>Show source in client.py:77</p> <p>Get a list of names for <code>__all__</code> statement.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_3","title":"Signature","text":"<pre><code>def get_all_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#clientget_class_name","title":"Client.get_class_name","text":"<p>Show source in client.py:63</p> <p>Get class name for ServiceName.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_4","title":"Signature","text":"<pre><code>@staticmethod\ndef get_class_name(service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/client/#clientget_example_method","title":"Client().get_example_method","text":"<p>Show source in client.py:119</p> <p>Get a nice method with return TypedDict for documentation.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_5","title":"Signature","text":"<pre><code>def get_example_method(self) -&gt; Method | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#clientget_exceptions_property","title":"Client().get_exceptions_property","text":"<p>Show source in client.py:92</p> <p>Generate Client exceptions property.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_6","title":"Signature","text":"<pre><code>def get_exceptions_property(self) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#see-also_2","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/structures/client/#clientget_required_import_records","title":"Client().get_required_import_records","text":"<p>Show source in client.py:111</p> <p>Extract import records from required type annotations.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_7","title":"Signature","text":"<pre><code>def get_required_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#see-also_3","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/client/#clientown_methods","title":"Client().own_methods","text":"<p>Show source in client.py:83</p> <p>Get a list of auto-generated methods.</p>"},{"location":"mypy_boto3_builder/structures/client/#signature_8","title":"Signature","text":"<pre><code>@property\ndef own_methods(self) -&gt; Iterator[Method]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/client/#see-also_4","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/structures/collection/","title":"Collection","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Collection</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.collection module.</p>"},{"location":"mypy_boto3_builder/structures/collection/#collection_1","title":"Collection","text":"<p>Show source in collection.py:15</p> <p>Boto3 ServiceResource or Resource collection.</p>"},{"location":"mypy_boto3_builder/structures/collection/#signature","title":"Signature","text":"<pre><code>class Collection(ClassRecord):\n    def __init__(\n        self,\n        name: str,\n        attribute_name: str,\n        parent_name: str,\n        service_name: ServiceName,\n        type_annotation: FakeAnnotation,\n        object_class_name: str,\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/collection/#see-also","title":"See also","text":"<ul> <li>ClassRecord</li> <li>FakeAnnotation</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/collection/#collectionboto3_doc_link","title":"Collection().boto3_doc_link","text":"<p>Show source in collection.py:40</p> <p>Link to boto3 docs.</p>"},{"location":"mypy_boto3_builder/structures/collection/#signature_1","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/collection/#collectioniterate_types","title":"Collection().iterate_types","text":"<p>Show source in collection.py:47</p> <p>Iterate over all type annotations.</p>"},{"location":"mypy_boto3_builder/structures/collection/#signature_2","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/collection/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/function/","title":"Function","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Function</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.function module.</p>"},{"location":"mypy_boto3_builder/structures/function/#function_1","title":"Function","text":"<p>Show source in function.py:19</p> <p>Module-level function.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature","title":"Signature","text":"<pre><code>class Function:\n    def __init__(\n        self,\n        name: str,\n        arguments: Iterable[Argument],\n        return_type: FakeAnnotation,\n        docstring: str = \"\",\n        decorators: Iterable[FakeAnnotation] = (),\n        body_lines: Iterable[str] = (),\n        type_ignore: bool = False,\n        is_async: bool = False,\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#see-also","title":"See also","text":"<ul> <li>Argument</li> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/function/#functioncopy","title":"Function().copy","text":"<p>Show source in function.py:145</p> <p>Deep copy function.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functionbody","title":"Function().body","text":"<p>Show source in function.py:86</p> <p>Function body as a string.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_2","title":"Signature","text":"<pre><code>@property\ndef body(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functioncopy_1","title":"Function().copy","text":"<p>Show source in function.py:139</p> <p>Deep copy function.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_3","title":"Signature","text":"<pre><code>def copy(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functioncreate_request_type_annotation","title":"Function().create_request_type_annotation","text":"<p>Show source in function.py:65</p> <p>Create and set <code>request_type_annotation</code> TypedDict based on function arguments.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_4","title":"Signature","text":"<pre><code>def create_request_type_annotation(self, name: str) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functionget_required_import_records","title":"Function().get_required_import_records","text":"<p>Show source in function.py:103</p> <p>Extract required import records.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_5","title":"Signature","text":"<pre><code>def get_required_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#see-also_1","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/function/#functionis_kw_only","title":"Function().is_kw_only","text":"<p>Show source in function.py:120</p> <p>Whether method arguments can be passed only as kwargs.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_6","title":"Signature","text":"<pre><code>def is_kw_only(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functioniterate_types","title":"Function().iterate_types","text":"<p>Show source in function.py:93</p> <p>Iterate over required type annotations.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_7","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#see-also_2","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/function/#functionremove_argument","title":"Function().remove_argument","text":"<p>Show source in function.py:160</p> <p>Remove argument by name.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_8","title":"Signature","text":"<pre><code>def remove_argument(self, *names: str) -&gt; Self: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functionreturns_none","title":"Function().returns_none","text":"<p>Show source in function.py:113</p> <p>Whether return type is None.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_9","title":"Signature","text":"<pre><code>@property\ndef returns_none(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functionshort_docstring","title":"Function().short_docstring","text":"<p>Show source in function.py:52</p> <p>Docstring without documentation links.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_10","title":"Signature","text":"<pre><code>@property\ndef short_docstring(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#functiontype_hint_annotations","title":"Function().type_hint_annotations","text":"<p>Show source in function.py:126</p> <p>Type annotations list from arguments and return type with internal types.</p>"},{"location":"mypy_boto3_builder/structures/function/#signature_11","title":"Signature","text":"<pre><code>@property\ndef type_hint_annotations(self) -&gt; list[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/function/#see-also_3","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/master_package/","title":"MasterPackage","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / MasterPackage</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.master_package module.</p>"},{"location":"mypy_boto3_builder/structures/master_package/#masterpackage_1","title":"MasterPackage","text":"<p>Show source in master_package.py:14</p> <p>Structure for mypy-boto3 package.</p>"},{"location":"mypy_boto3_builder/structures/master_package/#arguments","title":"Arguments","text":"<ul> <li><code>name</code> - Module name.</li> <li><code>pypi_name</code> - Module PyPI name.</li> <li><code>service_names</code> - List of included service names.</li> <li><code>service_packages</code> - List of included service packages.</li> </ul>"},{"location":"mypy_boto3_builder/structures/master_package/#signature","title":"Signature","text":"<pre><code>class MasterPackage(Package):\n    def __init__(\n        self,\n        service_names: Iterable[ServiceName] = (),\n        service_packages: Iterable[ServicePackage] = (),\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/master_package/#see-also","title":"See also","text":"<ul> <li>Package</li> <li>ServiceName</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/structures/master_package/#masterpackageessential_service_names","title":"MasterPackage().essential_service_names","text":"<p>Show source in master_package.py:34</p> <p>List of services maked as essential.</p>"},{"location":"mypy_boto3_builder/structures/master_package/#signature_1","title":"Signature","text":"<pre><code>@property\ndef essential_service_names(self) -&gt; list[ServiceName]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/master_package/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/method/","title":"Method","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Method</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.method module.</p>"},{"location":"mypy_boto3_builder/structures/method/#method_1","title":"Method","text":"<p>Show source in method.py:9</p> <p>Class method.</p>"},{"location":"mypy_boto3_builder/structures/method/#signature","title":"Signature","text":"<pre><code>class Method(Function): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/method/#see-also","title":"See also","text":"<ul> <li>Function</li> </ul>"},{"location":"mypy_boto3_builder/structures/method/#methodcall_arguments","title":"Method().call_arguments","text":"<p>Show source in method.py:14</p> <p>Arguments that are used in method call.</p>"},{"location":"mypy_boto3_builder/structures/method/#signature_1","title":"Signature","text":"<pre><code>@property\ndef call_arguments(self) -&gt; list[Argument]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/method/#see-also_1","title":"See also","text":"<ul> <li>Argument</li> </ul>"},{"location":"mypy_boto3_builder/structures/package/","title":"Package","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Package</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.package module.</p>"},{"location":"mypy_boto3_builder/structures/package/#package_1","title":"Package","text":"<p>Show source in package.py:13</p> <p>Parent class for all package structures.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature","title":"Signature","text":"<pre><code>class Package:\n    def __init__(\n        self, data: type[BasePackageData], service_names: Iterable[ServiceName] = ()\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/package/#packagedirectory_name","title":"Package().directory_name","text":"<p>Show source in package.py:33</p> <p>Directory name to store generated package.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature_1","title":"Signature","text":"<pre><code>@property\ndef directory_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/package/#packageget_local_doc_link","title":"Package().get_local_doc_link","text":"<p>Show source in package.py:44</p> <p>Get link to local docs.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature_2","title":"Signature","text":"<pre><code>def get_local_doc_link(self, service_name: ServiceName | None = None) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/package/#packageget_module_name","title":"Package().get_module_name","text":"<p>Show source in package.py:53</p> <p>Get service module name.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature_3","title":"Signature","text":"<pre><code>def get_module_name(self, service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/package/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/package/#packageget_service_pypi_link","title":"Package().get_service_pypi_link","text":"<p>Show source in package.py:65</p> <p>Get link to PyPI.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature_4","title":"Signature","text":"<pre><code>def get_service_pypi_link(self, service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/package/#see-also_2","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/package/#packageget_service_pypi_name","title":"Package().get_service_pypi_name","text":"<p>Show source in package.py:59</p> <p>Get PyPI package name for a service package.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature_5","title":"Signature","text":"<pre><code>def get_service_pypi_name(self, service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/package/#see-also_3","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/package/#packagemax_library_version","title":"Package().max_library_version","text":"<p>Show source in package.py:78</p> <p>Minimum required library version.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature_6","title":"Signature","text":"<pre><code>@property\ndef max_library_version(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/package/#packagemin_library_version","title":"Package().min_library_version","text":"<p>Show source in package.py:71</p> <p>Minimum required library version.</p>"},{"location":"mypy_boto3_builder/structures/package/#signature_7","title":"Signature","text":"<pre><code>@property\ndef min_library_version(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/paginator/","title":"Paginator","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Paginator</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.paginator module.</p>"},{"location":"mypy_boto3_builder/structures/paginator/#paginator_1","title":"Paginator","text":"<p>Show source in paginator.py:18</p> <p>Boto3 client Paginator.</p>"},{"location":"mypy_boto3_builder/structures/paginator/#signature","title":"Signature","text":"<pre><code>class Paginator(ClassRecord):\n    def __init__(\n        self,\n        name: str,\n        paginator_name: str,\n        operation_name: str,\n        service_name: ServiceName,\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/paginator/#see-also","title":"See also","text":"<ul> <li>ClassRecord</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/paginator/#paginatorboto3_doc_link","title":"Paginator().boto3_doc_link","text":"<p>Show source in paginator.py:38</p> <p>Link to boto3 docs.</p>"},{"location":"mypy_boto3_builder/structures/paginator/#signature_1","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/paginator/#paginatorget_client_method","title":"Paginator().get_client_method","text":"<p>Show source in paginator.py:45</p> <p>Get <code>get_paginator</code> method for <code>Client</code>.</p>"},{"location":"mypy_boto3_builder/structures/paginator/#signature_2","title":"Signature","text":"<pre><code>def get_client_method(self) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/paginator/#see-also_1","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/structures/resource/","title":"Resource","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Resource</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.resource module.</p>"},{"location":"mypy_boto3_builder/structures/resource/#resource_1","title":"Resource","text":"<p>Show source in resource.py:16</p> <p>Boto3 ServiceResource sub-Resource.</p>"},{"location":"mypy_boto3_builder/structures/resource/#signature","title":"Signature","text":"<pre><code>class Resource(ClassRecord):\n    def __init__(self, name: str, service_name: ServiceName): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/resource/#see-also","title":"See also","text":"<ul> <li>ClassRecord</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/resource/#resourceboto3_doc_link","title":"Resource().boto3_doc_link","text":"<p>Show source in resource.py:30</p> <p>Link to boto3 docs.</p>"},{"location":"mypy_boto3_builder/structures/resource/#signature_1","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/resource/#resourceiterate_types","title":"Resource().iterate_types","text":"<p>Show source in resource.py:37</p> <p>Iterate over all type annotations from collections.</p>"},{"location":"mypy_boto3_builder/structures/resource/#signature_2","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/resource/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/","title":"ServicePackage","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ServicePackage</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.service_package module.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackage_1","title":"ServicePackage","text":"<p>Show source in service_package.py:27</p> <p>Parsed Service package.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature","title":"Signature","text":"<pre><code>class ServicePackage(Package):\n    def __init__(\n        self,\n        data: type[BasePackageData],\n        service_name: ServiceName,\n        client: Client | None = None,\n        service_resource: ServiceResource | None = None,\n        waiters: Iterable[Waiter] = (),\n        paginators: Iterable[Paginator] = (),\n        type_defs: Iterable[TypeDefSortable] = (),\n        literals: Iterable[TypeLiteral] = (),\n        helper_functions: Iterable[Function] = (),\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>Function</li> <li>Package</li> <li>Paginator</li> <li>ServiceName</li> <li>TypeDefSortable</li> <li>TypeLiteral</li> <li>Waiter</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageclient","title":"ServicePackage().client","text":"<p>Show source in service_package.py:56</p> <p>Service Client.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_1","title":"Signature","text":"<pre><code>@property\ndef client(self) -&gt; Client: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_1","title":"See also","text":"<ul> <li>Client</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageextract_literals","title":"ServicePackage().extract_literals","text":"<p>Show source in service_package.py:65</p> <p>Extract literals from children.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_2","title":"Signature","text":"<pre><code>def extract_literals(self) -&gt; list[TypeLiteral]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_2","title":"See also","text":"<ul> <li>TypeLiteral</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_client_required_import_records","title":"ServicePackage().get_client_required_import_records","text":"<p>Show source in service_package.py:175</p> <p>Get import records for <code>client.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_3","title":"Signature","text":"<pre><code>def get_client_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_3","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_doc_link","title":"ServicePackage().get_doc_link","text":"<p>Show source in service_package.py:261</p> <p>Get link to local docs with anchor.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#arguments","title":"Arguments","text":"<ul> <li><code>file</code> - HTML file name</li> <li><code>parts</code> - Anchor parts</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_4","title":"Signature","text":"<pre><code>def get_doc_link(\n    self,\n    file: Literal[\n        \"client\", \"service_resource\", \"waiters\", \"paginators\", \"type_defs\", \"literals\"\n    ],\n    *parts: str\n) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_init_all_names","title":"ServicePackage().get_init_all_names","text":"<p>Show source in service_package.py:158</p> <p>Get <code>__all__</code> statement names for <code>__init__.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_5","title":"Signature","text":"<pre><code>def get_init_all_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_init_import_records","title":"ServicePackage().get_init_import_records","text":"<p>Show source in service_package.py:123</p> <p>Get import records for <code>__init__.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_6","title":"Signature","text":"<pre><code>def get_init_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_4","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_literals_required_import_records","title":"ServicePackage().get_literals_required_import_records","text":"<p>Show source in service_package.py:231</p> <p>Get import records for <code>literals.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_7","title":"Signature","text":"<pre><code>def get_literals_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_5","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_local_doc_link","title":"ServicePackage().get_local_doc_link","text":"<p>Show source in service_package.py:286</p> <p>Get link to local docs.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_8","title":"Signature","text":"<pre><code>def get_local_doc_link(self, service_name: ServiceName | None = None) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_paginator_required_import_records","title":"ServicePackage().get_paginator_required_import_records","text":"<p>Show source in service_package.py:195</p> <p>Get import records for <code>paginator.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_9","title":"Signature","text":"<pre><code>def get_paginator_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_6","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_service_resource_required_import_records","title":"ServicePackage().get_service_resource_required_import_records","text":"<p>Show source in service_package.py:185</p> <p>Get import records for <code>service_resource.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_10","title":"Signature","text":"<pre><code>def get_service_resource_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_7","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_type_defs","title":"ServicePackage().get_type_defs","text":"<p>Show source in service_package.py:78</p> <p>Extract typed defs from children.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_11","title":"Signature","text":"<pre><code>def get_type_defs(self) -&gt; set[TypeDefSortable]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_8","title":"See also","text":"<ul> <li>TypeDefSortable</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_type_defs_required_import_records","title":"ServicePackage().get_type_defs_required_import_records","text":"<p>Show source in service_package.py:215</p> <p>Get import records for <code>type_defs.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_12","title":"Signature","text":"<pre><code>def get_type_defs_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_9","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_waiter_required_import_records","title":"ServicePackage().get_waiter_required_import_records","text":"<p>Show source in service_package.py:205</p> <p>Get import records for <code>waiter.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_13","title":"Signature","text":"<pre><code>def get_waiter_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_10","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageiterate_types","title":"ServicePackage().iterate_types","text":"<p>Show source in service_package.py:111</p> <p>Iterate over type annotations from Client, ServiceResource, waiters and paginators.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_14","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_11","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackagevalidate","title":"ServicePackage().validate","text":"<p>Show source in service_package.py:237</p> <p>Validate parsed module.</p> <p>Finds duplicated names. Finds conflicts with reserved Python words.</p>"},{"location":"mypy_boto3_builder/structures/service_package/#signature_15","title":"Signature","text":"<pre><code>def validate(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/","title":"ServiceResource","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ServiceResource</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.service_resource module.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresource_1","title":"ServiceResource","text":"<p>Show source in service_resource.py:23</p> <p>Boto3 ServiceResource.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#signature","title":"Signature","text":"<pre><code>class ServiceResource(ClassRecord):\n    def __init__(\n        self,\n        name: str,\n        service_name: ServiceName,\n        boto3_service_resource: Boto3ServiceResource,\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also","title":"See also","text":"<ul> <li>ClassRecord</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceboto3_doc_link","title":"ServiceResource().boto3_doc_link","text":"<p>Show source in service_resource.py:79</p> <p>Link to boto3 docs.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_1","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_all_names","title":"ServiceResource().get_all_names","text":"<p>Show source in service_resource.py:97</p> <p>Get names for <code>__all__</code> statement.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_2","title":"Signature","text":"<pre><code>def get_all_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_class_name","title":"ServiceResource.get_class_name","text":"<p>Show source in service_resource.py:59</p> <p>Get class name for ServiceName.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_3","title":"Signature","text":"<pre><code>@staticmethod\ndef get_class_name(service_name: ServiceName) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_collections","title":"ServiceResource().get_collections","text":"<p>Show source in service_resource.py:108</p> <p>Get a list of Service Resource collections.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_4","title":"Signature","text":"<pre><code>def get_collections(self) -&gt; list[Collection]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_2","title":"See also","text":"<ul> <li>Collection</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_sub_resources","title":"ServiceResource().get_sub_resources","text":"<p>Show source in service_resource.py:124</p> <p>Get sub-resource in safe order.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#returns","title":"Returns","text":"<p>A list of sub resources.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_5","title":"Signature","text":"<pre><code>def get_sub_resources(self) -&gt; list[Resource]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_3","title":"See also","text":"<ul> <li>Resource</li> </ul>"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceiterate_types","title":"ServiceResource().iterate_types","text":"<p>Show source in service_resource.py:86</p> <p>Iterate over type annotations for collections and sub-resources.</p>"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_6","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_4","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/","title":"TypesAioBoto3Package","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / TypesAioBoto3Package</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.types_aioboto3_package module.</p>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3package_1","title":"TypesAioBoto3Package","text":"<p>Show source in types_aioboto3_package.py:15</p> <p>Structure for types-aioboto3 module.</p>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature","title":"Signature","text":"<pre><code>class TypesAioBoto3Package(Package):\n    def __init__(\n        self,\n        data: type[BasePackageData],\n        session_class: ClassRecord | None = None,\n        service_names: Iterable[ServiceName] = (),\n        service_packages: Iterable[ServicePackage] = (),\n    ): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#see-also","title":"See also","text":"<ul> <li>BasePackageData</li> <li>Package</li> <li>ServiceName</li> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3packageessential_service_names","title":"TypesAioBoto3Package().essential_service_names","text":"<p>Show source in types_aioboto3_package.py:32</p> <p>Service names marked as essential.</p>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature_1","title":"Signature","text":"<pre><code>@property\ndef essential_service_names(self) -&gt; list[ServiceName]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3packageget_all_names","title":"TypesAioBoto3Package().get_all_names","text":"<p>Show source in types_aioboto3_package.py:50</p> <p>Get names for <code>__all__</code> directive.</p>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature_2","title":"Signature","text":"<pre><code>def get_all_names(self) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3packageget_session_required_import_records","title":"TypesAioBoto3Package().get_session_required_import_records","text":"<p>Show source in types_aioboto3_package.py:43</p> <p>Get import records for <code>session.py[i]</code>.</p>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature_3","title":"Signature","text":"<pre><code>def get_session_required_import_records(self) -&gt; list[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#see-also_2","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/structures/waiter/","title":"Waiter","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Waiter</p> <p>Auto-generated documentation for mypy_boto3_builder.structures.waiter module.</p>"},{"location":"mypy_boto3_builder/structures/waiter/#waiter_1","title":"Waiter","text":"<p>Show source in waiter.py:18</p> <p>Boto3 client Waiter.</p>"},{"location":"mypy_boto3_builder/structures/waiter/#signature","title":"Signature","text":"<pre><code>class Waiter(ClassRecord):\n    def __init__(self, name: str, waiter_name: str, service_name: ServiceName): ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/waiter/#see-also","title":"See also","text":"<ul> <li>ClassRecord</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/structures/waiter/#waiterboto3_doc_link","title":"Waiter().boto3_doc_link","text":"<p>Show source in waiter.py:36</p> <p>Link to waiter boto3 docs.</p>"},{"location":"mypy_boto3_builder/structures/waiter/#signature_1","title":"Signature","text":"<pre><code>@property\ndef boto3_doc_link(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/waiter/#waiterget_client_method","title":"Waiter().get_client_method","text":"<p>Show source in waiter.py:43</p> <p>Get <code>get_waiter</code> method for <code>Client</code>.</p>"},{"location":"mypy_boto3_builder/structures/waiter/#signature_2","title":"Signature","text":"<pre><code>def get_client_method(self) -&gt; Method: ...\n</code></pre>"},{"location":"mypy_boto3_builder/structures/waiter/#see-also_1","title":"See also","text":"<ul> <li>Method</li> </ul>"},{"location":"mypy_boto3_builder/stubs_static/","title":"Stubs Static","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Stubs Static</p> <p>Auto-generated documentation for mypy_boto3_builder.stubs_static module.</p>"},{"location":"mypy_boto3_builder/type_annotations/","title":"Type Annotations","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations module.</p>"},{"location":"mypy_boto3_builder/type_annotations/#modules","title":"Modules","text":"<ul> <li>ExternalImport</li> <li>FakeAnnotation</li> <li>InternalImport</li> <li>RemoveArgument</li> <li>Type</li> <li>TypeAnnotation</li> <li>TypeConstant</li> <li>TypeDefSortable</li> <li>TypeLiteral</li> <li>TypeSubscript</li> <li>TypeTypedDict</li> <li>TypeUnion</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/external_import/","title":"ExternalImport","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / ExternalImport</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.external_import module.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimport_1","title":"ExternalImport","text":"<p>Show source in external_import.py:15</p> <p>Wrapper for type annotations imported from 3rd party libraries, like <code>boto3.service.Service</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#arguments","title":"Arguments","text":"<ul> <li><code>source</code> - Module import string.</li> <li><code>name</code> - Import name.</li> <li><code>alias</code> - Import local name.</li> <li><code>safe</code> - Whether import is wrapped in try-except.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature","title":"Signature","text":"<pre><code>class ExternalImport(FakeAnnotation):\n    def __init__(\n        self, source: ImportString, name: str = \"\", alias: str = \"\", safe: bool = False\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> <li>ImportString</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportcopy","title":"ExternalImport().copy","text":"<p>Show source in external_import.py:93</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportcopy_from","title":"ExternalImport().copy_from","text":"<p>Show source in external_import.py:99</p> <p>Copy all fileds from another instance.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_2","title":"Signature","text":"<pre><code>def copy_from(self: _R, other: _R) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportfrom_class","title":"ExternalImport.from_class","text":"<p>Show source in external_import.py:38</p> <p>Create an instance from an imported class.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#arguments_1","title":"Arguments","text":"<ul> <li><code>value</code> - Any Class.</li> <li><code>alias</code> - Local name.</li> <li><code>safe</code> - Whether import is wrapped in try-except.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_3","title":"Signature","text":"<pre><code>@classmethod\ndef from_class(cls: type[_R], obj: type, alias: str = \"\", safe: bool = False) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportimport_record","title":"ExternalImport().import_record","text":"<p>Show source in external_import.py:60</p> <p>Get import record required for using type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_4","title":"Signature","text":"<pre><code>@property\ndef import_record(self) -&gt; ImportRecord: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#see-also_1","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportrender","title":"ExternalImport().render","text":"<p>Show source in external_import.py:78</p> <p>Get string with local name to use.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#returns","title":"Returns","text":"<p>Import record local name.</p>"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_5","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/","title":"FakeAnnotation","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / FakeAnnotation</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.fake_annotation module.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotation_1","title":"FakeAnnotation","text":"<p>Show source in fake_annotation.py:17</p> <p>Parent class for all type annotation wrappers.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature","title":"Signature","text":"<pre><code>class FakeAnnotation(ABC): ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationcopy","title":"FakeAnnotation().copy","text":"<p>Show source in fake_annotation.py:104</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_1","title":"Signature","text":"<pre><code>@abstractmethod\ndef __copy__(self) -&gt; Self: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationcopy_1","title":"FakeAnnotation().copy","text":"<p>Show source in fake_annotation.py:110</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_2","title":"Signature","text":"<pre><code>def copy(self) -&gt; Self: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationget_import_records","title":"FakeAnnotation().get_import_records","text":"<p>Show source in fake_annotation.py:60</p> <p>Get all import records required for using type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_3","title":"Signature","text":"<pre><code>def get_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#see-also","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationget_local_types","title":"FakeAnnotation().get_local_types","text":"<p>Show source in fake_annotation.py:116</p> <p>Get internal types generated by builder.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_4","title":"Signature","text":"<pre><code>def get_local_types(self) -&gt; list[\"FakeAnnotation\"]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationget_sort_key","title":"FakeAnnotation().get_sort_key","text":"<p>Show source in fake_annotation.py:39</p> <p>Get string to sort annotations.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_5","title":"Signature","text":"<pre><code>def get_sort_key(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_dict","title":"FakeAnnotation().is_dict","text":"<p>Show source in fake_annotation.py:80</p> <p>Whether type annotation is <code>Dict</code> or <code>TypedDict</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_6","title":"Signature","text":"<pre><code>def is_dict(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_list","title":"FakeAnnotation().is_list","text":"<p>Show source in fake_annotation.py:92</p> <p>Whether type annotation is <code>List</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_7","title":"Signature","text":"<pre><code>def is_list(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_literal","title":"FakeAnnotation().is_literal","text":"<p>Show source in fake_annotation.py:98</p> <p>Whether type annotation is <code>Literal</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_8","title":"Signature","text":"<pre><code>def is_literal(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_typed_dict","title":"FakeAnnotation().is_typed_dict","text":"<p>Show source in fake_annotation.py:86</p> <p>Whether type annotation is <code>TypedDict</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_9","title":"Signature","text":"<pre><code>def is_typed_dict(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationiterate_types","title":"FakeAnnotation().iterate_types","text":"<p>Show source in fake_annotation.py:74</p> <p>Iterate over all used type annotations recursively including self.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_10","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[\"FakeAnnotation\"]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationrender","title":"FakeAnnotation().render","text":"<p>Show source in fake_annotation.py:48</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_11","title":"Signature","text":"<pre><code>@abstractmethod\ndef render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationrender_definition","title":"FakeAnnotation().render_definition","text":"<p>Show source in fake_annotation.py:122</p> <p>Render type annotation for debug purposes.</p>"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_12","title":"Signature","text":"<pre><code>def render_definition(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/","title":"InternalImport","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / InternalImport</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.internal_import module.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#aliasinternalimport","title":"AliasInternalImport","text":"<p>Show source in internal_import.py:82</p> <p>Internal import for safe local usages.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#arguments","title":"Arguments","text":"<ul> <li><code>name</code> - Import name.</li> <li><code>service_name</code> - Service that import belongs to.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature","title":"Signature","text":"<pre><code>class AliasInternalImport(InternalImport):\n    def __init__(self, name: str, service_name: ServiceName | None = None) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#see-also","title":"See also","text":"<ul> <li>InternalImport</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#aliasinternalimportcopy","title":"AliasInternalImport().copy","text":"<p>Show source in internal_import.py:100</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimport_1","title":"InternalImport","text":"<p>Show source in internal_import.py:14</p> <p>Wrapper for simple type annotations from this module.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#arguments_1","title":"Arguments","text":"<ul> <li><code>name</code> - Import name.</li> <li><code>service_name</code> - Service that import belongs to.</li> <li><code>module_name</code> - Service module name.</li> <li><code>stringify</code> - Convert type annotation to string to avoid circular deps.</li> <li><code>use_alias</code> - Use name alias.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_2","title":"Signature","text":"<pre><code>class InternalImport(FakeAnnotation):\n    def __init__(\n        self,\n        name: str,\n        service_name: ServiceName | None = None,\n        module_name: ServiceModuleName = ServiceModuleName.service_resource,\n        stringify: bool = True,\n        use_alias: bool = False,\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> <li>ServiceModuleName</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimportcopy","title":"InternalImport().copy","text":"<p>Show source in internal_import.py:69</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_3","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimportget_alias","title":"InternalImport.get_alias","text":"<p>Show source in internal_import.py:40</p> <p>Get import name alias.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#arguments_2","title":"Arguments","text":"<ul> <li><code>name</code> - Original name.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#returns","title":"Returns","text":"<p>Name prefixed with underscore.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_4","title":"Signature","text":"<pre><code>@staticmethod\ndef get_alias(name: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimportrender","title":"InternalImport().render","text":"<p>Show source in internal_import.py:53</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#returns_1","title":"Returns","text":"<p>A string with a valid type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_5","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/","title":"RemoveArgument","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / RemoveArgument</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.remove_argument module.</p>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargument_1","title":"RemoveArgument","text":"<p>Show source in remove_argument.py:10</p> <p>Annotation to mark argument for removal.</p>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#signature","title":"Signature","text":"<pre><code>class RemoveArgument(FakeAnnotation): ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargumentcopy","title":"RemoveArgument().copy","text":"<p>Show source in remove_argument.py:21</p> <p>Not used.</p>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self) -&gt; Self: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargumentrender","title":"RemoveArgument().render","text":"<p>Show source in remove_argument.py:15</p> <p>Not used.</p>"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#signature_2","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type/","title":"Type","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / Type</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type/#type_1","title":"Type","text":"<p>Show source in type.py:16</p> <p>Predefined FakeAnnotation instances.</p>"},{"location":"mypy_boto3_builder/type_annotations/type/#signature","title":"Signature","text":"<pre><code>class Type: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type/#typeget_optional","title":"Type.get_optional","text":"<p>Show source in type.py:59</p> <p>Get Optional type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type/#signature_1","title":"Signature","text":"<pre><code>@classmethod\ndef get_optional(cls, wrapped: FakeAnnotation) -&gt; FakeAnnotation: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/","title":"TypeAnnotation","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeAnnotation</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type_annotation module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotation_1","title":"TypeAnnotation","text":"<p>Show source in type_annotation.py:14</p> <p>Wrapper for <code>typing</code> type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#arguments","title":"Arguments","text":"<ul> <li><code>wrapped_type</code> - Original type annotation as a string.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature","title":"Signature","text":"<pre><code>class TypeAnnotation(FakeAnnotation):\n    def __init__(self, wrapped_type: str) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationcopy","title":"TypeAnnotation().copy","text":"<p>Show source in type_annotation.py:114</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationget_import_name","title":"TypeAnnotation().get_import_name","text":"<p>Show source in type_annotation.py:70</p> <p>Create a safe name for imported annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_2","title":"Signature","text":"<pre><code>def get_import_name(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationis_dict","title":"TypeAnnotation().is_dict","text":"<p>Show source in type_annotation.py:96</p> <p>Whether annotation is a plain Dict.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_3","title":"Signature","text":"<pre><code>def is_dict(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationis_list","title":"TypeAnnotation().is_list","text":"<p>Show source in type_annotation.py:102</p> <p>Whether annotation is a plain List.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_4","title":"Signature","text":"<pre><code>def is_list(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationis_union","title":"TypeAnnotation().is_union","text":"<p>Show source in type_annotation.py:108</p> <p>Whether annotation is a Union.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_5","title":"Signature","text":"<pre><code>def is_union(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationrender","title":"TypeAnnotation().render","text":"<p>Show source in type_annotation.py:61</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#returns","title":"Returns","text":"<p>A string with a valid type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_6","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/","title":"TypeConstant","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeConstant</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type_constant module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#ellipsistype","title":"EllipsisType","text":"<p>Show source in type_constant.py:12</p> <p>Placeholder for <code>...</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature","title":"Signature","text":"<pre><code>class EllipsisType: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstant_1","title":"TypeConstant","text":"<p>Show source in type_constant.py:21</p> <p>Wrapper for constant like <code>False</code> or <code>\"test\"</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#arguments","title":"Arguments","text":"<ul> <li><code>value</code> - Constant value.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature_1","title":"Signature","text":"<pre><code>class TypeConstant(FakeAnnotation):\n    def __init__(self, value: ValueType) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> <li>ValueType</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstantcopy","title":"TypeConstant().copy","text":"<p>Show source in type_constant.py:46</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature_2","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstantrender","title":"TypeConstant().render","text":"<p>Show source in type_constant.py:34</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#returns","title":"Returns","text":"<p>A string with a valid type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature_3","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/","title":"TypeDefSortable","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeDefSortable</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type_def_sortable module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortable_1","title":"TypeDefSortable","text":"<p>Show source in type_def_sortable.py:14</p> <p>Sortable protocol for TypeDefSorter.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature","title":"Signature","text":"<pre><code>class TypeDefSortable(Protocol): ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableget_children_literals","title":"TypeDefSortable().get_children_literals","text":"<p>Show source in type_def_sortable.py:56</p> <p>Extract required TypeLiteral list from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_1","title":"Signature","text":"<pre><code>def get_children_literals(self, processed: Iterable[str] = ()) -&gt; set[TypeLiteral]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#see-also","title":"See also","text":"<ul> <li>TypeLiteral</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableget_children_types","title":"TypeDefSortable().get_children_types","text":"<p>Show source in type_def_sortable.py:44</p> <p>Extract required type annotations from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_2","title":"Signature","text":"<pre><code>def get_children_types(self) -&gt; set[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableget_definition_import_records","title":"TypeDefSortable().get_definition_import_records","text":"<p>Show source in type_def_sortable.py:75</p> <p>Get import record required for using TypeAnnotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_3","title":"Signature","text":"<pre><code>def get_definition_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#see-also_2","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableget_sortable_children","title":"TypeDefSortable().get_sortable_children","text":"<p>Show source in type_def_sortable.py:26</p> <p>Extract required sortable TypeDef list from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_4","title":"Signature","text":"<pre><code>def get_sortable_children(self) -&gt; list[\"TypeDefSortable\"]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableis_stringified","title":"TypeDefSortable().is_stringified","text":"<p>Show source in type_def_sortable.py:32</p> <p>Whether TypeDef usage should be rendered as a string.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_5","title":"Signature","text":"<pre><code>def is_stringified(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableis_type_def","title":"TypeDefSortable().is_type_def","text":"<p>Show source in type_def_sortable.py:62</p> <p>Whether type annotation is a TypeDef.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_6","title":"Signature","text":"<pre><code>def is_type_def(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableis_typed_dict","title":"TypeDefSortable().is_typed_dict","text":"<p>Show source in type_def_sortable.py:81</p> <p>Whether type annotation is a TypedDict.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_7","title":"Signature","text":"<pre><code>def is_typed_dict(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableis_union","title":"TypeDefSortable().is_union","text":"<p>Show source in type_def_sortable.py:87</p> <p>Whether type annotation is a TypeUnion.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_8","title":"Signature","text":"<pre><code>def is_union(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortableiterate_children","title":"TypeDefSortable().iterate_children","text":"<p>Show source in type_def_sortable.py:93</p> <p>Iterate over children.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_9","title":"Signature","text":"<pre><code>def iterate_children(self) -&gt; Iterator[Any]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortablerender_definition","title":"TypeDefSortable().render_definition","text":"<p>Show source in type_def_sortable.py:50</p> <p>Render type annotation for debug purposes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_10","title":"Signature","text":"<pre><code>def render_definition(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortablestringify","title":"TypeDefSortable().stringify","text":"<p>Show source in type_def_sortable.py:38</p> <p>Render TypeDef usage as a string.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_11","title":"Signature","text":"<pre><code>def stringify(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#typedefsortabletype_hint_annotations","title":"TypeDefSortable().type_hint_annotations","text":"<p>Show source in type_def_sortable.py:68</p> <p>Type annotations list from arguments and return type with internal types.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#signature_12","title":"Signature","text":"<pre><code>@property\ndef type_hint_annotations(self) -&gt; list[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_def_sortable/#see-also_3","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/","title":"TypeLiteral","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeLiteral</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type_literal module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteral_1","title":"TypeLiteral","text":"<p>Show source in type_literal.py:19</p> <p>Wrapper for <code>typing/typing_extensions.Literal</code> type annotations like <code>Literal['a', 'b']</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#arguments","title":"Arguments","text":"<ul> <li><code>name</code> - Literal name for non-inline.</li> <li><code>children</code> - Literal values.</li> <li><code>inline</code> - Render literal inline.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature","title":"Signature","text":"<pre><code>class TypeLiteral(FakeAnnotation):\n    def __init__(self, name: str, children: Iterable[str]) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralcopy","title":"TypeLiteral().copy","text":"<p>Show source in type_literal.py:78</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteraladd_child","title":"TypeLiteral().add_child","text":"<p>Show source in type_literal.py:90</p> <p>Disabled method to avoid confusion.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_2","title":"Signature","text":"<pre><code>def add_child(self, child: FakeAnnotation) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralget_definition_import_records","title":"TypeLiteral().get_definition_import_records","text":"<p>Show source in type_literal.py:72</p> <p>Get import record required for using Literal.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_3","title":"Signature","text":"<pre><code>def get_definition_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also_2","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralget_local_types","title":"TypeLiteral().get_local_types","text":"<p>Show source in type_literal.py:102</p> <p>Get internal types generated by builder.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_4","title":"Signature","text":"<pre><code>def get_local_types(self) -&gt; list[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also_3","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralget_sort_key","title":"TypeLiteral().get_sort_key","text":"<p>Show source in type_literal.py:35</p> <p>Sort literals by name.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_5","title":"Signature","text":"<pre><code>def get_sort_key(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralinline","title":"TypeLiteral().inline","text":"<p>Show source in type_literal.py:41</p> <p>Whether Litereal should be rendered inline.</p> <p>1-value literals are rendered inline.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_6","title":"Signature","text":"<pre><code>@property\ndef inline(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralis_literal","title":"TypeLiteral().is_literal","text":"<p>Show source in type_literal.py:84</p> <p>Whether type annotation is <code>Literal</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_7","title":"Signature","text":"<pre><code>def is_literal(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralis_same","title":"TypeLiteral().is_same","text":"<p>Show source in type_literal.py:96</p> <p>Check if literals have the same children.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_8","title":"Signature","text":"<pre><code>def is_same(self: _R, other: _R) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralrender","title":"TypeLiteral().render","text":"<p>Show source in type_literal.py:50</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#returns","title":"Returns","text":"<p>A string with a valid type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_9","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralrender_definition","title":"TypeLiteral().render_definition","text":"<p>Show source in type_literal.py:108</p> <p>Render type annotation definition.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_10","title":"Signature","text":"<pre><code>def render_definition(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/","title":"TypeSubscript","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeSubscript</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type_subscript module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscript_1","title":"TypeSubscript","text":"<p>Show source in type_subscript.py:16</p> <p>Wrapper for subscript type annotations, like <code>List[str]</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#arguments","title":"Arguments","text":"<ul> <li><code>parent</code> - Parent type annotation.</li> <li><code>children</code> - Children type annotations.</li> <li><code>stringify</code> - Convert type annotation to string.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature","title":"Signature","text":"<pre><code>class TypeSubscript(FakeAnnotation):\n    def __init__(\n        self,\n        parent: FakeAnnotation,\n        children: Iterable[FakeAnnotation] = (),\n        stringify: bool = False,\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptcopy","title":"TypeSubscript().copy","text":"<p>Show source in type_subscript.py:91</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptadd_child","title":"TypeSubscript().add_child","text":"<p>Show source in type_subscript.py:73</p> <p>Add new child to Substcript.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_2","title":"Signature","text":"<pre><code>def add_child(self, child: FakeAnnotation) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptfind_type_annotation_parent","title":"TypeSubscript().find_type_annotation_parent","text":"<p>Show source in type_subscript.py:110</p> <p>Check recursively if child is present in subscript.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_3","title":"Signature","text":"<pre><code>def find_type_annotation_parent(\n    self: _R, type_annotation: FakeAnnotation\n) -&gt; _R | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_2","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptget_import_records","title":"TypeSubscript().get_import_records","text":"<p>Show source in type_subscript.py:55</p> <p>Get all import records required for using type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_4","title":"Signature","text":"<pre><code>def get_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_3","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptget_local_types","title":"TypeSubscript().get_local_types","text":"<p>Show source in type_subscript.py:101</p> <p>Get internal types generated by builder.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_5","title":"Signature","text":"<pre><code>def get_local_types(self) -&gt; list[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_4","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptis_dict","title":"TypeSubscript().is_dict","text":"<p>Show source in type_subscript.py:79</p> <p>Whether subscript parent is Dict.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_6","title":"Signature","text":"<pre><code>def is_dict(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptis_list","title":"TypeSubscript().is_list","text":"<p>Show source in type_subscript.py:85</p> <p>Whether subscript parent is List.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_7","title":"Signature","text":"<pre><code>def is_list(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptiterate_types","title":"TypeSubscript().iterate_types","text":"<p>Show source in type_subscript.py:65</p> <p>Extract type annotations from children.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_8","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_5","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptrender","title":"TypeSubscript().render","text":"<p>Show source in type_subscript.py:39</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#returns","title":"Returns","text":"<p>A string with a valid type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_9","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptreplace_child","title":"TypeSubscript().replace_child","text":"<p>Show source in type_subscript.py:125</p> <p>Replace child type annotation with a new one.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_10","title":"Signature","text":"<pre><code>def replace_child(self, child: FakeAnnotation, new_child: FakeAnnotation) -&gt; Self: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_6","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/","title":"TypeTypedDict","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeTypedDict</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type_typed_dict module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddict_1","title":"TypeTypedDict","text":"<p>Show source in type_typed_dict.py:71</p> <p>Wrapper for <code>typing/typing_extensions.TypedDict</code> type annotations.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#arguments","title":"Arguments","text":"<ul> <li><code>name</code> - Type name.</li> <li><code>children</code> - Typed dict attributes.</li> <li><code>docstring</code> - Docstring for render.</li> <li><code>stringify</code> - Convert type annotation to string to avoid circular deps.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature","title":"Signature","text":"<pre><code>class TypeTypedDict(FakeAnnotation, TypeDefSortable):\n    def __init__(\n        self,\n        name: str,\n        children: Iterable[TypedDictAttribute] = (),\n        docstring: str = \"\",\n        stringify: bool = False,\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> <li>TypeDefSortable</li> <li>TypedDictAttribute</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictcopy","title":"TypeTypedDict().copy","text":"<p>Show source in type_typed_dict.py:209</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictadd_attribute","title":"TypeTypedDict().add_attribute","text":"<p>Show source in type_typed_dict.py:148</p> <p>Add new attribute to a dictionary.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#arguments_1","title":"Arguments","text":"<ul> <li><code>name</code> - Argument name.</li> <li><code>type_annotation</code> - Argument type annotation.</li> <li><code>required</code> - Whether argument has to be set.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_2","title":"Signature","text":"<pre><code>def add_attribute(\n    self, name: str, type_annotation: FakeAnnotation, required: bool\n) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_1","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_children_literals","title":"TypeTypedDict().get_children_literals","text":"<p>Show source in type_typed_dict.py:248</p> <p>Extract required TypeLiteral list from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_3","title":"Signature","text":"<pre><code>def get_children_literals(self, processed: Iterable[str] = ()) -&gt; set[TypeLiteral]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_2","title":"See also","text":"<ul> <li>TypeLiteral</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_children_types","title":"TypeTypedDict().get_children_types","text":"<p>Show source in type_typed_dict.py:226</p> <p>Extract required type annotations from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_4","title":"Signature","text":"<pre><code>def get_children_types(self) -&gt; set[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_3","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_definition_import_records","title":"TypeTypedDict().get_definition_import_records","text":"<p>Show source in type_typed_dict.py:133</p> <p>Get import record required for using TypedDict.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_5","title":"Signature","text":"<pre><code>def get_definition_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_4","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_local_types","title":"TypeTypedDict().get_local_types","text":"<p>Show source in type_typed_dict.py:270</p> <p>Get internal types generated by builder.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_6","title":"Signature","text":"<pre><code>def get_local_types(self) -&gt; list[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_5","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_optional","title":"TypeTypedDict().get_optional","text":"<p>Show source in type_typed_dict.py:199</p> <p>Get a list of optional attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_7","title":"Signature","text":"<pre><code>def get_optional(self) -&gt; list[TypedDictAttribute]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_6","title":"See also","text":"<ul> <li>TypedDictAttribute</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_required","title":"TypeTypedDict().get_required","text":"<p>Show source in type_typed_dict.py:189</p> <p>Get a list of required attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_8","title":"Signature","text":"<pre><code>def get_required(self) -&gt; list[TypedDictAttribute]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_7","title":"See also","text":"<ul> <li>TypedDictAttribute</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_sort_key","title":"TypeTypedDict().get_sort_key","text":"<p>Show source in type_typed_dict.py:106</p> <p>Sort Typed Dicts by name.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_9","title":"Signature","text":"<pre><code>def get_sort_key(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_sortable_children","title":"TypeTypedDict().get_sortable_children","text":"<p>Show source in type_typed_dict.py:235</p> <p>Extract required TypeDefSortable list from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_10","title":"Signature","text":"<pre><code>def get_sortable_children(self) -&gt; list[TypeDefSortable]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_8","title":"See also","text":"<ul> <li>TypeDefSortable</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicthas_both","title":"TypeTypedDict().has_both","text":"<p>Show source in type_typed_dict.py:183</p> <p>Whether TypedDict has both optional and required keys.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_11","title":"Signature","text":"<pre><code>def has_both(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicthas_optional","title":"TypeTypedDict().has_optional","text":"<p>Show source in type_typed_dict.py:171</p> <p>Whether TypedDict has optional keys.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_12","title":"Signature","text":"<pre><code>def has_optional(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicthas_required","title":"TypeTypedDict().has_required","text":"<p>Show source in type_typed_dict.py:177</p> <p>Whether TypedDict has required keys.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_13","title":"Signature","text":"<pre><code>def has_required(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_dict","title":"TypeTypedDict().is_dict","text":"<p>Show source in type_typed_dict.py:159</p> <p>Whether type annotation is <code>Dict</code> or <code>TypedDict</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_14","title":"Signature","text":"<pre><code>def is_dict(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_same","title":"TypeTypedDict().is_same","text":"<p>Show source in type_typed_dict.py:220</p> <p>Check whether typed dict attributes are the same as <code>other</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_15","title":"Signature","text":"<pre><code>def is_same(self: _R, other: _R) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_stringified","title":"TypeTypedDict().is_stringified","text":"<p>Show source in type_typed_dict.py:94</p> <p>Whether TypedDict usage should be rendered as a string.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_16","title":"Signature","text":"<pre><code>def is_stringified(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_type_def","title":"TypeTypedDict().is_type_def","text":"<p>Show source in type_typed_dict.py:287</p> <p>Whether type annotation is a TypeDef.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_17","title":"Signature","text":"<pre><code>def is_type_def(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_typed_dict","title":"TypeTypedDict().is_typed_dict","text":"<p>Show source in type_typed_dict.py:165</p> <p>Whether type annotation is <code>TypedDict</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_18","title":"Signature","text":"<pre><code>def is_typed_dict(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_union","title":"TypeTypedDict().is_union","text":"<p>Show source in type_typed_dict.py:293</p> <p>Whether type annotation is a TypeUnion.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_19","title":"Signature","text":"<pre><code>def is_union(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictiterate_children","title":"TypeTypedDict().iterate_children","text":"<p>Show source in type_typed_dict.py:263</p> <p>Iterate over children from required to optional.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_20","title":"Signature","text":"<pre><code>def iterate_children(self) -&gt; Iterator[TypedDictAttribute]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_9","title":"See also","text":"<ul> <li>TypedDictAttribute</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictrender","title":"TypeTypedDict().render","text":"<p>Show source in type_typed_dict.py:115</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#returns","title":"Returns","text":"<p>A string with a valid type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_21","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictrender_definition","title":"TypeTypedDict().render_definition","text":"<p>Show source in type_typed_dict.py:127</p> <p>Render type annotation definition.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_22","title":"Signature","text":"<pre><code>def render_definition(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictstringify","title":"TypeTypedDict().stringify","text":"<p>Show source in type_typed_dict.py:100</p> <p>Render TypedDict usage as a string.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_23","title":"Signature","text":"<pre><code>def stringify(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicttype_hint_annotations","title":"TypeTypedDict().type_hint_annotations","text":"<p>Show source in type_typed_dict.py:276</p> <p>Type annotations list from arguments and return type with internal types.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_24","title":"Signature","text":"<pre><code>@property\ndef type_hint_annotations(self) -&gt; list[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_10","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattribute","title":"TypedDictAttribute","text":"<p>Show source in type_typed_dict.py:22</p> <p>TypedDict attribute wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#arguments_2","title":"Arguments","text":"<ul> <li><code>name</code> - Attribute name.</li> <li><code>type_annotation</code> - Attribute type annotation.</li> <li><code>required</code> - Whether the attribute has to be set.</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_25","title":"Signature","text":"<pre><code>class TypedDictAttribute:\n    def __init__(\n        self, name: str, type_annotation: FakeAnnotation, required: bool\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_11","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributeget_type_annotation","title":"TypedDictAttribute().get_type_annotation","text":"<p>Show source in type_typed_dict.py:40</p> <p>Get wrapped for non-required type annotation or raw type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_26","title":"Signature","text":"<pre><code>def get_type_annotation(self) -&gt; FakeAnnotation: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_12","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributeis_required","title":"TypedDictAttribute().is_required","text":"<p>Show source in type_typed_dict.py:64</p> <p>Whether argument is required.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_27","title":"Signature","text":"<pre><code>def is_required(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributeiterate_types","title":"TypedDictAttribute().iterate_types","text":"<p>Show source in type_typed_dict.py:58</p> <p>Itera over type annotations.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_28","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_13","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributerender","title":"TypedDictAttribute().render","text":"<p>Show source in type_typed_dict.py:49</p> <p>Render attribute to use in class-based TypedDict definition.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#returns_1","title":"Returns","text":"<p>A string with argument definition.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_29","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/","title":"TypeUnion","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeUnion</p> <p>Auto-generated documentation for mypy_boto3_builder.type_annotations.type_union module.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunion_1","title":"TypeUnion","text":"<p>Show source in type_union.py:22</p> <p>Wrapper for name Union type annotations, like <code>MyUnion = Union[str, int]</code>.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature","title":"Signature","text":"<pre><code>class TypeUnion(TypeSubscript, TypeDefSortable):\n    def __init__(\n        self, children: Iterable[FakeAnnotation], name: str = \"\", stringify: bool = False\n    ) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also","title":"See also","text":"<ul> <li>FakeAnnotation</li> <li>TypeDefSortable</li> <li>TypeSubscript</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunioncopy","title":"TypeUnion().copy","text":"<p>Show source in type_union.py:75</p> <p>Create a copy of type annotation wrapper.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_1","title":"Signature","text":"<pre><code>def __copy__(self: _R) -&gt; _R: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionget_children_literals","title":"TypeUnion().get_children_literals","text":"<p>Show source in type_union.py:107</p> <p>Extract required TypeLiteral list from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_2","title":"Signature","text":"<pre><code>def get_children_literals(self, processed: Iterable[str] = ()) -&gt; set[TypeLiteral]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_1","title":"See also","text":"<ul> <li>TypeLiteral</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionget_children_types","title":"TypeUnion().get_children_types","text":"<p>Show source in type_union.py:85</p> <p>Extract required type annotations from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_3","title":"Signature","text":"<pre><code>def get_children_types(self) -&gt; set[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_2","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionget_definition_import_records","title":"TypeUnion().get_definition_import_records","text":"<p>Show source in type_union.py:122</p> <p>Get import record required for using Union.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_4","title":"Signature","text":"<pre><code>def get_definition_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_3","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionget_import_records","title":"TypeUnion().get_import_records","text":"<p>Show source in type_union.py:138</p> <p>Get all import records required for using type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_5","title":"Signature","text":"<pre><code>def get_import_records(self) -&gt; set[ImportRecord]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_4","title":"See also","text":"<ul> <li>ImportRecord</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionget_sortable_children","title":"TypeUnion().get_sortable_children","text":"<p>Show source in type_union.py:94</p> <p>Extract required TypeDefSortable list from attributes.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_6","title":"Signature","text":"<pre><code>def get_sortable_children(self) -&gt; list[TypeDefSortable]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_5","title":"See also","text":"<ul> <li>TypeDefSortable</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionis_named","title":"TypeUnion().is_named","text":"<p>Show source in type_union.py:69</p> <p>Check if type annotation is a named type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_7","title":"Signature","text":"<pre><code>def is_named(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionis_stringified","title":"TypeUnion().is_stringified","text":"<p>Show source in type_union.py:40</p> <p>Whether Union usage should be rendered as a string.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_8","title":"Signature","text":"<pre><code>def is_stringified(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionis_type_def","title":"TypeUnion().is_type_def","text":"<p>Show source in type_union.py:154</p> <p>Whether type annotation is a TypeDef.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_9","title":"Signature","text":"<pre><code>def is_type_def(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionis_union","title":"TypeUnion().is_union","text":"<p>Show source in type_union.py:171</p> <p>Whether type annotation is a TypeUnion.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_10","title":"Signature","text":"<pre><code>def is_union(self) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunioniterate_children","title":"TypeUnion().iterate_children","text":"<p>Show source in type_union.py:177</p> <p>Iterate over children.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_11","title":"Signature","text":"<pre><code>def iterate_children(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_6","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunioniterate_types","title":"TypeUnion().iterate_types","text":"<p>Show source in type_union.py:144</p> <p>Extract type annotations from children.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_12","title":"Signature","text":"<pre><code>def iterate_types(self) -&gt; Iterator[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_7","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionrender","title":"TypeUnion().render","text":"<p>Show source in type_union.py:52</p> <p>Render type annotation to a valid Python code for local usage.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#returns","title":"Returns","text":"<p>A string with a valid type annotation.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_13","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionrender_definition","title":"TypeUnion().render_definition","text":"<p>Show source in type_union.py:183</p> <p>Render type annotation definition.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_14","title":"Signature","text":"<pre><code>def render_definition(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeunionstringify","title":"TypeUnion().stringify","text":"<p>Show source in type_union.py:46</p> <p>Render Union usage as a string.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_15","title":"Signature","text":"<pre><code>def stringify(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#typeuniontype_hint_annotations","title":"TypeUnion().type_hint_annotations","text":"<p>Show source in type_union.py:160</p> <p>Type annotations list from arguments and return type with internal types.</p>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#signature_16","title":"Signature","text":"<pre><code>@property\ndef type_hint_annotations(self) -&gt; list[FakeAnnotation]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_annotations/type_union/#see-also_8","title":"See also","text":"<ul> <li>FakeAnnotation</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/","title":"Type Maps","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps module.</p>"},{"location":"mypy_boto3_builder/type_maps/#modules","title":"Modules","text":"<ul> <li>Aio Resource Method Map</li> <li>Argument Alias Map</li> <li>Literal Type Map</li> <li>Method Type Map</li> <li>Named Unions</li> <li>Service Stub Map</li> <li>Shape Type Map</li> <li>Typed Dicts</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/aio_resource_method_map/","title":"Aio Resource Method Map","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Aio Resource Method Map</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.aio_resource_method_map module.</p>"},{"location":"mypy_boto3_builder/type_maps/aio_resource_method_map/#get_aio_resource_method","title":"get_aio_resource_method","text":"<p>Show source in aio_resource_method_map.py:37</p> <p>Get aio resource method override.</p>"},{"location":"mypy_boto3_builder/type_maps/aio_resource_method_map/#arguments","title":"Arguments","text":"<ul> <li><code>service_name</code> - Service name.</li> <li><code>resource_name</code> - Parent resource name.</li> <li><code>method_name</code> - Method name.</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/aio_resource_method_map/#returns","title":"Returns","text":"<p>Method structure or None.</p>"},{"location":"mypy_boto3_builder/type_maps/aio_resource_method_map/#signature","title":"Signature","text":"<pre><code>def get_aio_resource_method(\n    service_name: ServiceName, resource_name: str, method_name: str\n) -&gt; Method | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_maps/aio_resource_method_map/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/argument_alias_map/","title":"Argument Alias Map","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Argument Alias Map</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.argument_alias_map module.</p>"},{"location":"mypy_boto3_builder/type_maps/argument_alias_map/#get_argument_alias","title":"get_argument_alias","text":"<p>Show source in argument_alias_map.py:32</p> <p>Get argument alias for operation.</p>"},{"location":"mypy_boto3_builder/type_maps/argument_alias_map/#arguments","title":"Arguments","text":"<ul> <li><code>service_name</code> - Service name</li> <li><code>operation_name</code> - Resource operation name</li> <li><code>argument_name</code> - Argument name</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/argument_alias_map/#returns","title":"Returns","text":"<p>Argument alias name or None if argument has to be deleted.</p>"},{"location":"mypy_boto3_builder/type_maps/argument_alias_map/#signature","title":"Signature","text":"<pre><code>def get_argument_alias(\n    service_name: ServiceName, operation_name: str, argument_name: str\n) -&gt; str | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_maps/argument_alias_map/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/","title":"Literal Type Map","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Literal Type Map</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.literal_type_map module.</p>"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#get_literal_type_stub","title":"get_literal_type_stub","text":"<p>Show source in literal_type_map.py:10</p> <p>Get stub type for botocore literal.</p>"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#arguments","title":"Arguments","text":"<ul> <li><code>service_name</code> - Service name.</li> <li><code>literal_name</code> - Target Literal name.</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#returns","title":"Returns","text":"<p>Literal children or None.</p>"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#signature","title":"Signature","text":"<pre><code>def get_literal_type_stub(\n    service_name: ServiceName, literal_name: str\n) -&gt; list[str] | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/method_type_map/","title":"Method Type Map","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Method Type Map</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.method_type_map module.</p>"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#get_method_type_stub","title":"get_method_type_stub","text":"<p>Show source in method_type_map.py:182</p> <p>Get stub type for method argument.</p>"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#arguments","title":"Arguments","text":"<ul> <li><code>service_name</code> - Service name.</li> <li><code>class_name</code> - Parent class name.</li> <li><code>method_name</code> - Method name.</li> <li><code>argument_name</code> - Argument name.</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#returns","title":"Returns","text":"<p>Type annotation or None.</p>"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#signature","title":"Signature","text":"<pre><code>def get_method_type_stub(\n    service_name: ServiceName, class_name: str, method_name: str, argument_name: str\n) -&gt; FakeAnnotation | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/named_unions/","title":"Named Unions","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Named Unions</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.named_unions module.</p>"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/","title":"Shape Type Map","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Shape Type Map</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.shape_type_map module.</p>"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#get_shape_type_stub","title":"get_shape_type_stub","text":"<p>Show source in shape_type_map.py:84</p> <p>Get stub type for input botocore shape.</p>"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#arguments","title":"Arguments","text":"<ul> <li><code>shape_type_map</code> - Map to lookup</li> <li><code>service_name</code> - Service name</li> <li><code>resource_name</code> - Resource name</li> <li><code>shape_name</code> - Target Shape name</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#returns","title":"Returns","text":"<p>Type annotation or None.</p>"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#signature","title":"Signature","text":"<pre><code>def get_shape_type_stub(\n    shape_type_maps: Iterable[ShapeTypeMap],\n    service_name: ServiceName,\n    resource_name: str,\n    shape_name: str,\n) -&gt; FakeAnnotation | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> <li>ShapeTypeMap</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/typed_dicts/","title":"Typed Dicts","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Typed Dicts</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.typed_dicts module.</p>"},{"location":"mypy_boto3_builder/type_maps/typed_dicts/#attributes","title":"Attributes","text":"<ul> <li> <p><code>CopySourceTypeDef</code> - s3: <code>TypeTypedDict('CopySourceTypeDef', [TypedDictAttribute('Bucket', Type.str, True), TypedDictAttribute('Key', Type.str, True), TypedDictAttribute('VersionId', Type.str, False)])</code></p> </li> <li> <p><code>TagTypeDef</code> - ec2: <code>TypeTypedDict('TagTypeDef', [TypedDictAttribute('Key', Type.str, False), TypedDictAttribute('Value', Type.str, False)])</code></p> </li> <li> <p><code>EmptyResponseMetadataTypeDef</code> - dynamodb: <code>TypeTypedDict('EmptyResponseMetadataTypeDef', [TypedDictAttribute('ResponseMetadata', ResponseMetadataTypeDef, True)])</code></p> </li> <li> <p><code>GetTemplateOutputTypeDef</code> - cloudformation: <code>TypeTypedDict('GetTemplateOutputTypeDef', [TypedDictAttribute('TemplateBody', Type.DictStrAny, True), TypedDictAttribute('StagesAvailable', TypeSubscript(Type.List, [InternalImport(name='TemplateStageType', module_name=ServiceModuleName.literals)]), True), TypedDictAttribute('ResponseMetadata', ResponseMetadataTypeDef, True)])</code></p> </li> <li> <p><code>PolicyDocumentStatementTypeDef</code> - iam: <code>TypeTypedDict('PolicyDocumentStatementTypeDef', [TypedDictAttribute('Effect', Type.str, True), TypedDictAttribute('Resource', TypeUnion((Type.str, TypeSubscript(Type.List, [Type.str]))), True), TypedDictAttribute('Sid', Type.str, True), TypedDictAttribute('Action', TypeUnion((Type.str, TypeSubscript(Type.List, [Type.str]))), True)])</code></p> </li> </ul>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/","title":"Service Stub Map","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Service Stub Map</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.service_stub_map module.</p>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/#get_stub_method_map","title":"get_stub_method_map","text":"<p>Show source in init.py:43</p> <p>Get boto3 injected methods.</p>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/#signature","title":"Signature","text":"<pre><code>def get_stub_method_map(service_name: ServiceName, parent: str) -&gt; dict[str, Method]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/#see-also","title":"See also","text":"<ul> <li>Method</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/#modules","title":"Modules","text":"<ul> <li>Dynamodb</li> <li>Ec2</li> <li>Rds</li> <li>S3</li> </ul>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/dynamodb/","title":"Dynamodb","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Service Stub Map / Dynamodb</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.service_stub_map.dynamodb module.</p>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/ec2/","title":"Ec2","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Service Stub Map / Ec2</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.service_stub_map.ec2 module.</p>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/rds/","title":"Rds","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Service Stub Map / Rds</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.service_stub_map.rds module.</p>"},{"location":"mypy_boto3_builder/type_maps/service_stub_map/s3/","title":"S3","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Service Stub Map / S3</p> <p>Auto-generated documentation for mypy_boto3_builder.type_maps.service_stub_map.s3 module.</p>"},{"location":"mypy_boto3_builder/utils/","title":"Utils","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils</p> <p>Auto-generated documentation for mypy_boto3_builder.utils module.</p>"},{"location":"mypy_boto3_builder/utils/#modules","title":"Modules","text":"<ul> <li>Boto3 Utils</li> <li>BotocoreChangelog</li> <li>Jinja2</li> <li>Markdown</li> <li>NicePath</li> <li>PyPIManager</li> <li>Strings</li> <li>TypeDefSorter</li> <li>Version</li> </ul>"},{"location":"mypy_boto3_builder/utils/boto3_utils/","title":"Boto3 Utils","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Boto3 Utils</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.boto3_utils module.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_boto3_client","title":"get_boto3_client","text":"<p>Show source in boto3_utils.py:36</p> <p>Get boto3 client from <code>session</code>.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_name</code> - ServiceName instance.</li> </ul>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#returns","title":"Returns","text":"<p>Boto3 client.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature","title":"Signature","text":"<pre><code>@cache\ndef get_boto3_client(session: Session, service_name: ServiceName) -&gt; BaseClient: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_boto3_resource","title":"get_boto3_resource","text":"<p>Show source in boto3_utils.py:51</p> <p>Get boto3 resource from <code>session</code>.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#arguments_1","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_name</code> - ServiceName instance.</li> </ul>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#returns_1","title":"Returns","text":"<p>Boto3 resource or None.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature_1","title":"Signature","text":"<pre><code>@cache\ndef get_boto3_resource(\n    session: Session, service_name: ServiceName\n) -&gt; Boto3ServiceResource | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_boto3_session","title":"get_boto3_session","text":"<p>Show source in boto3_utils.py:19</p> <p>Create and cache boto3 session.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature_2","title":"Signature","text":"<pre><code>@cache\ndef get_boto3_session() -&gt; Session: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_botocore_session","title":"get_botocore_session","text":"<p>Show source in boto3_utils.py:29</p> <p>Get botocore session from boto3 session.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature_3","title":"Signature","text":"<pre><code>def get_botocore_session(session: Session) -&gt; BotocoreSession: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_region_name_literal","title":"get_region_name_literal","text":"<p>Show source in boto3_utils.py:69</p> <p>Get Literal with all regions.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#arguments_2","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session.</li> <li><code>service_names</code> - All available service names.</li> </ul>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#returns_2","title":"Returns","text":"<p>TypeLiteral for region names.</p>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature_4","title":"Signature","text":"<pre><code>def get_region_name_literal(\n    session: Session, service_names: Iterable[ServiceName]\n) -&gt; TypeLiteral | None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/boto3_utils/#see-also_2","title":"See also","text":"<ul> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/utils/botocore_changelog/","title":"BotocoreChangelog","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / BotocoreChangelog</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.botocore_changelog module.</p>"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#botocorechangelog_1","title":"BotocoreChangelog","text":"<p>Show source in botocore_changelog.py:10</p> <p>Parser for boto3 changelog.</p>"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#signature","title":"Signature","text":"<pre><code>class BotocoreChangelog:\n    def __init__(self) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#botocorechangelogget_updated_service_names","title":"BotocoreChangelog().get_updated_service_names","text":"<p>Show source in botocore_changelog.py:49</p> <p>Get a list of service names updated in <code>version</code> release.</p>"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#signature_1","title":"Signature","text":"<pre><code>def get_updated_service_names(self, version: str) -&gt; list[str]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/jinja2/","title":"Jinja2","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Jinja2</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.jinja2 module.</p>"},{"location":"mypy_boto3_builder/utils/jinja2/#render_jinja2_template","title":"render_jinja2_template","text":"<p>Show source in jinja2.py:11</p> <p>Render Jinja2 template to a string.</p>"},{"location":"mypy_boto3_builder/utils/jinja2/#arguments","title":"Arguments","text":"<ul> <li><code>template_path</code> - Relative path to template in <code>TEMPLATES_PATH</code></li> <li><code>kwargs</code> - Render arguments</li> </ul>"},{"location":"mypy_boto3_builder/utils/jinja2/#returns","title":"Returns","text":"<p>A rendered template.</p>"},{"location":"mypy_boto3_builder/utils/jinja2/#signature","title":"Signature","text":"<pre><code>def render_jinja2_template(template_path: Path, **kwargs: Any) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/markdown/","title":"Markdown","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Markdown</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.markdown module.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#header","title":"Header","text":"<p>Show source in markdown.py:12</p> <p>Markdown header.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#arguments","title":"Arguments","text":"<ul> <li><code>title</code> - Header title</li> <li><code>level</code> - Header level, 1-6</li> </ul>"},{"location":"mypy_boto3_builder/utils/markdown/#signature","title":"Signature","text":"<pre><code>class Header:\n    def __init__(self, title: str, level: int) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/markdown/#headeranchor","title":"Header().anchor","text":"<p>Show source in markdown.py:25</p> <p>Anchor link for title.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#signature_1","title":"Signature","text":"<pre><code>@property\ndef anchor(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/markdown/#headerrender","title":"Header().render","text":"<p>Show source in markdown.py:32</p> <p>Render menu item to string.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#signature_2","title":"Signature","text":"<pre><code>def render(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/markdown/#tableofcontents","title":"TableOfContents","text":"<p>Show source in markdown.py:40</p> <p>MarkDown Table of Contents.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#arguments_1","title":"Arguments","text":"<ul> <li><code>headers</code> - List of headers</li> </ul>"},{"location":"mypy_boto3_builder/utils/markdown/#signature_3","title":"Signature","text":"<pre><code>class TableOfContents:\n    def __init__(self, headers: Iterable[Header]) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/markdown/#see-also","title":"See also","text":"<ul> <li>Header</li> </ul>"},{"location":"mypy_boto3_builder/utils/markdown/#tableofcontentsparse","title":"TableOfContents.parse","text":"<p>Show source in markdown.py:51</p> <p>Parse table of Contents for MarkDown text.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#arguments_2","title":"Arguments","text":"<ul> <li><code>text</code> - MarkDown text.</li> </ul>"},{"location":"mypy_boto3_builder/utils/markdown/#signature_4","title":"Signature","text":"<pre><code>@classmethod\ndef parse(cls, text: str) -&gt; Self: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/markdown/#tableofcontentsrender","title":"TableOfContents().render","text":"<p>Show source in markdown.py:74</p> <p>Render ToC to string.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#signature_5","title":"Signature","text":"<pre><code>def render(self, max_level: int = 3) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/markdown/#fix_pypi_headers","title":"fix_pypi_headers","text":"<p>Show source in markdown.py:86</p> <p>Parse table of Contents for MarkDown text.</p>"},{"location":"mypy_boto3_builder/utils/markdown/#arguments_3","title":"Arguments","text":"<ul> <li><code>text</code> - MarkDown text.</li> </ul>"},{"location":"mypy_boto3_builder/utils/markdown/#signature_6","title":"Signature","text":"<pre><code>def fix_pypi_headers(text: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/nice_path/","title":"NicePath","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / NicePath</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.nice_path module.</p>"},{"location":"mypy_boto3_builder/utils/nice_path/#nicepath_1","title":"NicePath","text":"<p>Show source in nice_path.py:12</p> <p>Path that represents it as relative to workdir.</p>"},{"location":"mypy_boto3_builder/utils/nice_path/#signature","title":"Signature","text":"<pre><code>class NicePath(Path): ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/nice_path/#nicepathwalk","title":"NicePath().walk","text":"<p>Show source in nice_path.py:36</p> <p>Walk files except for <code>exclude</code>.</p>"},{"location":"mypy_boto3_builder/utils/nice_path/#yields","title":"Yields","text":"<p>Existing Path.</p>"},{"location":"mypy_boto3_builder/utils/nice_path/#signature_1","title":"Signature","text":"<pre><code>def walk(\n    self: _R, exclude: Iterable[Path] = (), glob_pattern: str = \"**/*\"\n) -&gt; Generator[_R, None, None]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/pypi_manager/","title":"PyPIManager","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / PyPIManager</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.pypi_manager module.</p>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanager_1","title":"PyPIManager","text":"<p>Show source in pypi_manager.py:13</p> <p>Version manager for PyPI packages.</p>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#arguments","title":"Arguments","text":"<ul> <li><code>package</code> - PyPI package name</li> </ul>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#signature","title":"Signature","text":"<pre><code>class PyPIManager:\n    def __init__(self, package: str) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanagerget_next_version","title":"PyPIManager().get_next_version","text":"<p>Show source in pypi_manager.py:43</p> <p>Get not existing version or closest not existing post-release.</p>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#arguments_1","title":"Arguments","text":"<ul> <li><code>version</code> - Target version</li> </ul>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#signature_1","title":"Signature","text":"<pre><code>def get_next_version(self, version: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanagerhas_version","title":"PyPIManager().has_version","text":"<p>Show source in pypi_manager.py:34</p> <p>Check if version is already uploaded to PyPI.</p>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#arguments_2","title":"Arguments","text":"<ul> <li><code>version</code> - Target version</li> </ul>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#signature_2","title":"Signature","text":"<pre><code>def has_version(self, version: str) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanagerjson_url","title":"PyPIManager().json_url","text":"<p>Show source in pypi_manager.py:27</p> <p>Package JSON URL on PyPI.</p>"},{"location":"mypy_boto3_builder/utils/pypi_manager/#signature_3","title":"Signature","text":"<pre><code>@property\ndef json_url(self) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/","title":"Strings","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Strings</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.strings module.</p>"},{"location":"mypy_boto3_builder/utils/strings/#get_anchor_link","title":"get_anchor_link","text":"<p>Show source in strings.py:36</p> <p>Convert header to markdown anchor link.</p>"},{"location":"mypy_boto3_builder/utils/strings/#signature","title":"Signature","text":"<pre><code>def get_anchor_link(text: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/#get_botocore_class_name","title":"get_botocore_class_name","text":"<p>Show source in strings.py:124</p> <p>Get Botocore class name from Service metadata.</p>"},{"location":"mypy_boto3_builder/utils/strings/#signature_1","title":"Signature","text":"<pre><code>def get_botocore_class_name(metadata: dict[str, str]) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/#get_class_prefix","title":"get_class_prefix","text":"<p>Show source in strings.py:22</p> <p>Get a valid Python class prefix from <code>func_name</code>.</p>"},{"location":"mypy_boto3_builder/utils/strings/#arguments","title":"Arguments","text":"<ul> <li><code>func_name</code> - Any string.</li> </ul>"},{"location":"mypy_boto3_builder/utils/strings/#returns","title":"Returns","text":"<p>String with a class prefix.</p>"},{"location":"mypy_boto3_builder/utils/strings/#signature_2","title":"Signature","text":"<pre><code>def get_class_prefix(func_name: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/#get_short_docstring","title":"get_short_docstring","text":"<p>Show source in strings.py:50</p> <p>Create a short docstring from boto3 documentation.</p> <p>Trims docstring to 300 chars. Removes double and triple backticks. Stops on <code>**Request syntax**</code> and <code>::</code>. Ensures that backticks are closed. Replaces <code>Text &lt;link&gt;</code> with Text. Wraps docstring to 80 chars.</p>"},{"location":"mypy_boto3_builder/utils/strings/#signature_3","title":"Signature","text":"<pre><code>def get_short_docstring(doc: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/#get_type_def_name","title":"get_type_def_name","text":"<p>Show source in strings.py:134</p> <p>Get a valid Python TypeDef class name from <code>parts</code>.</p>"},{"location":"mypy_boto3_builder/utils/strings/#examples","title":"Examples","text":"<pre><code>get_type_def_name(\"MyClass\", \"my_method\")  # MyClassMyMethodTypeDef\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/#signature_4","title":"Signature","text":"<pre><code>def get_type_def_name(*parts: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/#is_reserved","title":"is_reserved","text":"<p>Show source in strings.py:43</p> <p>Check whether varialbe name conflicts with Python reserved names.</p>"},{"location":"mypy_boto3_builder/utils/strings/#signature_5","title":"Signature","text":"<pre><code>def is_reserved(word: str) -&gt; bool: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/strings/#textwrap","title":"textwrap","text":"<p>Show source in strings.py:98</p> <p>Wrap text to <code>width</code> chars.</p>"},{"location":"mypy_boto3_builder/utils/strings/#signature_6","title":"Signature","text":"<pre><code>def textwrap(text: str, width: int) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/type_def_sorter/","title":"TypeDefSorter","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / TypeDefSorter</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.type_def_sorter module.</p>"},{"location":"mypy_boto3_builder/utils/type_def_sorter/#typedefsorter_1","title":"TypeDefSorter","text":"<p>Show source in type_def_sorter.py:12</p> <p>Sorter for TypeDefs to prevent import errors.</p>"},{"location":"mypy_boto3_builder/utils/type_def_sorter/#signature","title":"Signature","text":"<pre><code>class TypeDefSorter:\n    def __init__(self, type_defs: Iterable[TypeDefSortable]) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/type_def_sorter/#see-also","title":"See also","text":"<ul> <li>TypeDefSortable</li> </ul>"},{"location":"mypy_boto3_builder/utils/type_def_sorter/#typedefsortersort","title":"TypeDefSorter().sort","text":"<p>Show source in type_def_sorter.py:40</p> <p>Sort items with TopologicalSorter or stringify as a fallback.</p>"},{"location":"mypy_boto3_builder/utils/type_def_sorter/#signature_1","title":"Signature","text":"<pre><code>def sort(self) -&gt; list[TypeDefSortable]: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/type_def_sorter/#see-also_1","title":"See also","text":"<ul> <li>TypeDefSortable</li> </ul>"},{"location":"mypy_boto3_builder/utils/version/","title":"Version","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Version</p> <p>Auto-generated documentation for mypy_boto3_builder.utils.version module.</p>"},{"location":"mypy_boto3_builder/utils/version/#get_aioboto3_version","title":"get_aioboto3_version","text":"<p>Show source in version.py:64</p> <p>Get aioboto3 package version.</p>"},{"location":"mypy_boto3_builder/utils/version/#signature","title":"Signature","text":"<pre><code>def get_aioboto3_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/version/#get_aiobotocore_version","title":"get_aiobotocore_version","text":"<p>Show source in version.py:53</p> <p>Get aiobotocore package version.</p>"},{"location":"mypy_boto3_builder/utils/version/#signature_1","title":"Signature","text":"<pre><code>def get_aiobotocore_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/version/#get_boto3_version","title":"get_boto3_version","text":"<p>Show source in version.py:46</p> <p>Get boto3 package version.</p>"},{"location":"mypy_boto3_builder/utils/version/#signature_2","title":"Signature","text":"<pre><code>def get_boto3_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/version/#get_botocore_version","title":"get_botocore_version","text":"<p>Show source in version.py:39</p> <p>Get botocore package version.</p>"},{"location":"mypy_boto3_builder/utils/version/#signature_3","title":"Signature","text":"<pre><code>def get_botocore_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/version/#get_builder_version","title":"get_builder_version","text":"<p>Show source in version.py:15</p> <p>Get program version.</p>"},{"location":"mypy_boto3_builder/utils/version/#signature_4","title":"Signature","text":"<pre><code>def get_builder_version() -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/version/#get_max_build_version","title":"get_max_build_version","text":"<p>Show source in version.py:32</p> <p>Get min version build version by bumping minor.</p>"},{"location":"mypy_boto3_builder/utils/version/#signature_5","title":"Signature","text":"<pre><code>def get_max_build_version(version: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/utils/version/#get_min_build_version","title":"get_min_build_version","text":"<p>Show source in version.py:25</p> <p>Get min version build version by setting micro to 0.</p>"},{"location":"mypy_boto3_builder/utils/version/#signature_6","title":"Signature","text":"<pre><code>def get_min_build_version(version: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/","title":"Writers","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers</p> <p>Auto-generated documentation for mypy_boto3_builder.writers module.</p>"},{"location":"mypy_boto3_builder/writers/#modules","title":"Modules","text":"<ul> <li>Aioboto3 Processors</li> <li>Aiobotocore Processors</li> <li>PackageWriter</li> <li>Processors</li> <li>Utils</li> </ul>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/","title":"Aioboto3 Processors","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Aioboto3 Processors</p> <p>Auto-generated documentation for mypy_boto3_builder.writers.aioboto3_processors module.</p>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#process_types_aioboto3","title":"process_types_aioboto3","text":"<p>Show source in aioboto3_processors.py:20</p> <p>Parse and write stubs package <code>types-aioboto3</code>.</p>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> <li><code>generate_setup</code> - Generate ready-to-install or to-use package</li> <li><code>version</code> - Package version</li> </ul>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#returns","title":"Returns","text":"<p>Parsed TypesAioBoto3Package.</p>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#signature","title":"Signature","text":"<pre><code>def process_types_aioboto3(\n    session: Session,\n    output_path: Path,\n    service_names: Iterable[ServiceName],\n    generate_setup: bool,\n    version: str,\n) -&gt; TypesAioBoto3Package: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#see-also","title":"See also","text":"<ul> <li>ServiceName</li> <li>TypesAioBoto3Package</li> </ul>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#process_types_aioboto3_docs","title":"process_types_aioboto3_docs","text":"<p>Show source in aioboto3_processors.py:89</p> <p>Parse and write master package docs.</p>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#arguments_1","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> </ul>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#returns_1","title":"Returns","text":"<p>Parsed AioBotocoreStubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#signature_1","title":"Signature","text":"<pre><code>def process_types_aioboto3_docs(\n    session: Session, output_path: Path, service_names: Iterable[ServiceName]\n) -&gt; TypesAioBoto3Package: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#see-also_1","title":"See also","text":"<ul> <li>ServiceName</li> <li>TypesAioBoto3Package</li> </ul>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#process_types_aioboto3_lite","title":"process_types_aioboto3_lite","text":"<p>Show source in aioboto3_processors.py:54</p> <p>Parse and write stubs package <code>types-aioboto3-lite</code>.</p>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#arguments_2","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> <li><code>generate_setup</code> - Generate ready-to-install or to-use package</li> <li><code>version</code> - Package version</li> </ul>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#returns_2","title":"Returns","text":"<p>Parsed AioBotocoreStubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#signature_2","title":"Signature","text":"<pre><code>def process_types_aioboto3_lite(\n    session: Session,\n    output_path: Path,\n    service_names: Iterable[ServiceName],\n    generate_setup: bool,\n    version: str,\n) -&gt; TypesAioBoto3Package: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#see-also_2","title":"See also","text":"<ul> <li>ServiceName</li> <li>TypesAioBoto3Package</li> </ul>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/","title":"Aiobotocore Processors","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Aiobotocore Processors</p> <p>Auto-generated documentation for mypy_boto3_builder.writers.aiobotocore_processors module.</p>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#process_aiobotocore_stubs","title":"process_aiobotocore_stubs","text":"<p>Show source in aiobotocore_processors.py:23</p> <p>Parse and write stubs package <code>aiobotocore-stubs</code>.</p>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> <li><code>generate_setup</code> - Generate ready-to-install or to-use package</li> <li><code>version</code> - Package version</li> </ul>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#returns","title":"Returns","text":"<p>Parsed AioBotocoreStubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#signature","title":"Signature","text":"<pre><code>def process_aiobotocore_stubs(\n    session: Session,\n    output_path: Path,\n    service_names: Iterable[ServiceName],\n    generate_setup: bool,\n    version: str,\n) -&gt; AioBotocoreStubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#see-also","title":"See also","text":"<ul> <li>AioBotocoreStubsPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#process_aiobotocore_stubs_docs","title":"process_aiobotocore_stubs_docs","text":"<p>Show source in aiobotocore_processors.py:96</p> <p>Parse and write master package docs.</p>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#arguments_1","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> </ul>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#returns_1","title":"Returns","text":"<p>Parsed AioBotocoreStubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#signature_1","title":"Signature","text":"<pre><code>def process_aiobotocore_stubs_docs(\n    session: Session, output_path: Path, service_names: Iterable[ServiceName]\n) -&gt; AioBotocoreStubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#see-also_1","title":"See also","text":"<ul> <li>AioBotocoreStubsPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#process_aiobotocore_stubs_lite","title":"process_aiobotocore_stubs_lite","text":"<p>Show source in aiobotocore_processors.py:59</p> <p>Parse and write stubs package <code>aiobotocore-stubs-lite</code>.</p>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#arguments_2","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> <li><code>generate_setup</code> - Generate ready-to-install or to-use package</li> <li><code>version</code> - Package version</li> </ul>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#returns_2","title":"Returns","text":"<p>Parsed AioBotocoreStubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#signature_2","title":"Signature","text":"<pre><code>def process_aiobotocore_stubs_lite(\n    session: Session,\n    output_path: Path,\n    service_names: Iterable[ServiceName],\n    generate_setup: bool,\n    version: str,\n) -&gt; AioBotocoreStubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#see-also_2","title":"See also","text":"<ul> <li>AioBotocoreStubsPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/","title":"PackageWriter","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / PackageWriter</p> <p>Auto-generated documentation for mypy_boto3_builder.writers.package_writer module.</p>"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriter_1","title":"PackageWriter","text":"<p>Show source in package_writer.py:26</p> <p>Writer for package static and template files.</p>"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments","title":"Arguments","text":"<ul> <li><code>output_path</code> - Output path</li> <li><code>generate_setup</code> - Whether to generate setup files</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/#signature","title":"Signature","text":"<pre><code>class PackageWriter:\n    def __init__(self, output_path: Path, generate_setup: bool = True) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_docs","title":"PackageWriter().write_docs","text":"<p>Show source in package_writer.py:205</p> <p>Generate docs for a package.</p>"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_1","title":"Signature","text":"<pre><code>def write_docs(self, package: Package, templates_path: Path) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also","title":"See also","text":"<ul> <li>Package</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_package","title":"PackageWriter().write_package","text":"<p>Show source in package_writer.py:175</p> <p>Generate files for a package.</p>"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments_1","title":"Arguments","text":"<ul> <li><code>package</code> - Package to render</li> <li><code>templates_path</code> - Path to Jinja templates for package</li> <li><code>static_files_path</code> - Path to static files for package</li> <li><code>exclude_template_names</code> - Do not render templates with these names</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_2","title":"Signature","text":"<pre><code>def write_package(\n    self,\n    package: Package,\n    templates_path: Path | None = None,\n    static_files_path: Path | None = None,\n    exclude_template_names: Sequence[str] = (),\n) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also_1","title":"See also","text":"<ul> <li>Package</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_service_docs","title":"PackageWriter().write_service_docs","text":"<p>Show source in package_writer.py:326</p> <p>Create service docs files.</p>"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments_2","title":"Arguments","text":"<ul> <li><code>package</code> - Service package.</li> <li><code>output_path</code> - Path to output folder.</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_3","title":"Signature","text":"<pre><code>def write_service_docs(self, package: ServicePackage, templates_path: Path) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also_2","title":"See also","text":"<ul> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_service_package","title":"PackageWriter().write_service_package","text":"<p>Show source in package_writer.py:305</p> <p>Create stubs files for service.</p>"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments_3","title":"Arguments","text":"<ul> <li><code>package</code> - Service package.</li> </ul>"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_4","title":"Signature","text":"<pre><code>def write_service_package(\n    self, package: ServicePackage, templates_path: Path\n) -&gt; None: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also_3","title":"See also","text":"<ul> <li>ServicePackage</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/","title":"Processors","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Processors</p> <p>Auto-generated documentation for mypy_boto3_builder.writers.processors module.</p>"},{"location":"mypy_boto3_builder/writers/processors/#process_boto3_stubs","title":"process_boto3_stubs","text":"<p>Show source in processors.py:22</p> <p>Parse and write stubs package <code>boto3_stubs</code>.</p>"},{"location":"mypy_boto3_builder/writers/processors/#arguments","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> <li><code>generate_setup</code> - Generate ready-to-install or to-use package</li> <li><code>version</code> - Package version</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/#returns","title":"Returns","text":"<p>Parsed Boto3StubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/processors/#signature","title":"Signature","text":"<pre><code>def process_boto3_stubs(\n    session: Session,\n    output_path: Path,\n    service_names: Iterable[ServiceName],\n    generate_setup: bool,\n    version: str,\n) -&gt; Boto3StubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/processors/#see-also","title":"See also","text":"<ul> <li>Boto3StubsPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/#process_boto3_stubs_docs","title":"process_boto3_stubs_docs","text":"<p>Show source in processors.py:139</p> <p>Parse and write master package docs.</p>"},{"location":"mypy_boto3_builder/writers/processors/#arguments_1","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/#returns_1","title":"Returns","text":"<p>Parsed Boto3StubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/processors/#signature_1","title":"Signature","text":"<pre><code>def process_boto3_stubs_docs(\n    session: Session, output_path: Path, service_names: Iterable[ServiceName]\n) -&gt; Boto3StubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/processors/#see-also_1","title":"See also","text":"<ul> <li>Boto3StubsPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/#process_boto3_stubs_lite","title":"process_boto3_stubs_lite","text":"<p>Show source in processors.py:59</p> <p>Parse and write stubs package <code>boto3-stubs-lite</code>.</p>"},{"location":"mypy_boto3_builder/writers/processors/#arguments_2","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> <li><code>generate_setup</code> - Generate ready-to-install or to-use package</li> <li><code>version</code> - Package version</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/#returns_2","title":"Returns","text":"<p>Parsed Boto3StubsPackage.</p>"},{"location":"mypy_boto3_builder/writers/processors/#signature_2","title":"Signature","text":"<pre><code>def process_boto3_stubs_lite(\n    session: Session,\n    output_path: Path,\n    service_names: Iterable[ServiceName],\n    generate_setup: bool,\n    version: str,\n) -&gt; Boto3StubsPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/processors/#see-also_2","title":"See also","text":"<ul> <li>Boto3StubsPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/#process_master","title":"process_master","text":"<p>Show source in processors.py:104</p> <p>Parse and write master package <code>mypy_boto3</code>.</p>"},{"location":"mypy_boto3_builder/writers/processors/#arguments_3","title":"Arguments","text":"<ul> <li><code>session</code> - boto3 session</li> <li><code>output_path</code> - Package output path</li> <li><code>service_names</code> - List of known service names</li> <li><code>generate_setup</code> - Generate ready-to-install or to-use package</li> <li><code>version</code> - Package version</li> </ul>"},{"location":"mypy_boto3_builder/writers/processors/#returns_3","title":"Returns","text":"<p>Parsed MasterPackage.</p>"},{"location":"mypy_boto3_builder/writers/processors/#signature_3","title":"Signature","text":"<pre><code>def process_master(\n    session: Session,\n    output_path: Path,\n    service_names: Iterable[ServiceName],\n    generate_setup: bool,\n    version: str,\n) -&gt; MasterPackage: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/processors/#see-also_3","title":"See also","text":"<ul> <li>MasterPackage</li> <li>ServiceName</li> </ul>"},{"location":"mypy_boto3_builder/writers/utils/","title":"Utils","text":"<p>Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Utils</p> <p>Auto-generated documentation for mypy_boto3_builder.writers.utils module.</p>"},{"location":"mypy_boto3_builder/writers/utils/#blackify","title":"blackify","text":"<p>Show source in utils.py:24</p> <p>Format <code>content</code> with <code>black</code> if <code>file_path</code> is <code>*.py</code> or <code>*.pyi</code>.</p> <p>On error writes invalid <code>content</code> to <code>file_path</code> to check for errors.</p>"},{"location":"mypy_boto3_builder/writers/utils/#arguments","title":"Arguments","text":"<ul> <li><code>content</code> - Python code to format.</li> <li><code>file_path</code> - Target file path.</li> </ul>"},{"location":"mypy_boto3_builder/writers/utils/#returns","title":"Returns","text":"<p>Formatted python code.</p>"},{"location":"mypy_boto3_builder/writers/utils/#raises","title":"Raises","text":"<ul> <li><code>ValueError</code> - If <code>content</code> is not a valid Python code.</li> </ul>"},{"location":"mypy_boto3_builder/writers/utils/#signature","title":"Signature","text":"<pre><code>def blackify(content: str, file_path: Path) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/utils/#blackify_markdown","title":"blackify_markdown","text":"<p>Show source in utils.py:151</p> <p>Blackify python codeblocks.</p>"},{"location":"mypy_boto3_builder/writers/utils/#signature_1","title":"Signature","text":"<pre><code>def blackify_markdown(text: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/utils/#format_md","title":"format_md","text":"<p>Show source in utils.py:138</p> <p>Format MarkDown with mdformat.</p>"},{"location":"mypy_boto3_builder/writers/utils/#signature_2","title":"Signature","text":"<pre><code>def format_md(text: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/utils/#insert_md_toc","title":"insert_md_toc","text":"<p>Show source in utils.py:114</p> <p>Insert Table of Contents before the first second-level header.</p>"},{"location":"mypy_boto3_builder/writers/utils/#signature_3","title":"Signature","text":"<pre><code>def insert_md_toc(text: str) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/utils/#render_jinja2_package_template","title":"render_jinja2_package_template","text":"<p>Show source in utils.py:95</p> <p>Render Jinja2 package template to a string.</p>"},{"location":"mypy_boto3_builder/writers/utils/#arguments_1","title":"Arguments","text":"<ul> <li><code>template_path</code> - Relative path to template in <code>TEMPLATES_PATH</code></li> <li><code>module</code> - Module record</li> <li><code>service_name</code> - ServiceName instance</li> </ul>"},{"location":"mypy_boto3_builder/writers/utils/#returns_1","title":"Returns","text":"<p>A rendered template.</p>"},{"location":"mypy_boto3_builder/writers/utils/#signature_4","title":"Signature","text":"<pre><code>def render_jinja2_package_template(\n    template_path: Path,\n    package: Package | None = None,\n    service_name: ServiceName | None = None,\n) -&gt; str: ...\n</code></pre>"},{"location":"mypy_boto3_builder/writers/utils/#sort_imports","title":"sort_imports","text":"<p>Show source in utils.py:57</p> <p>Sort imports with <code>isort</code>.</p>"},{"location":"mypy_boto3_builder/writers/utils/#arguments_2","title":"Arguments","text":"<ul> <li><code>content</code> - File content.</li> <li><code>module_name</code> - Current module name.</li> <li><code>extension</code> - py or pyi</li> <li><code>third_party</code> - List of module names to be marked as third-party.</li> </ul>"},{"location":"mypy_boto3_builder/writers/utils/#returns_2","title":"Returns","text":"<p>New file content.</p>"},{"location":"mypy_boto3_builder/writers/utils/#signature_5","title":"Signature","text":"<pre><code>def sort_imports(\n    content: str,\n    module_name: str,\n    extension: str = \"py\",\n    third_party: Iterable[str] = (),\n) -&gt; str: ...\n</code></pre>"},{"location":"types_boto3/types_boto3/","title":"Types Boto3","text":"<p>Mypy_boto3_builder Index / <code>types_boto3</code> / Types Boto3</p> <p>Auto-generated documentation for types_boto3.types_boto3 module.</p>"},{"location":"types_botocore/types_botocore/","title":"Types Botocore","text":"<p>Mypy_boto3_builder Index / <code>types_botocore</code> / Types Botocore</p> <p>Auto-generated documentation for types_botocore.types_botocore module.</p>"}]}