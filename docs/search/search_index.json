{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mypy Boto3 Builder","text":"<p>Type annotations builder for boto3-stubs, types-aiobotocore, and types-aioboto3 projects. Compatible with VSCode, PyCharm, Emacs, Sublime Text, mypy, pyright and other tools.</p> <p>See how it helps to find and fix potential bugs:</p> <p></p>"},{"location":"#quickstart","title":"Quickstart","text":"<ul> <li>If you use <code>boto3</code> or <code>botocore</code>, follow boto3-stubs documentation</li> <li>For <code>aiobotocore</code> follow types-aiobotocore documentation</li> <li>For <code>aioboto3</code> follow types-aioboto3 documentation</li> </ul>"},{"location":"#documentation","title":"Documentation","text":"<ul> <li>How to use pre-built libraries</li> <li>How to build type annotations</li> <li>Development</li> <li>Contributors</li> </ul>"},{"location":"#versioning","title":"Versioning","text":"<p><code>mypy_boto3_builder</code> version is not related to <code>boto3</code> version and follows PEP 440.</p>"},{"location":"#latest-changes","title":"Latest changes","text":"<p>Full changelog can be found in Releases.</p>"},{"location":"development/","title":"Development","text":"<ul> <li>Install Python 3.11+, ideally with pyenv</li> <li>Install poetry: <code>pip install poetry</code></li> <li>Install dependencies: <code>poetry install</code></li> <li>Use scripts for repo to check if everything works: <code>./scripts/build.sh</code></li> <li>Run manual pre-commit: <code>./scripts/before_commit.sh</code></li> </ul>"},{"location":"how_to_build/","title":"How to build type annotations","text":""},{"location":"how_to_build/#locally","title":"Locally","text":"<pre><code># Install preferred version of `boto3`\npython -m pip install boto3==1.16.25 botocore==1.19.25\n\n# Install `mypy-boto3-builder`\npython -m pip install mypy-boto3-builder\n\n# Build all packages in mypy_boto3_output directory\npython -m mypy_boto3_builder mypy_boto3_output\n\n# Or specify required services explicitly\npython -m mypy_boto3_builder mypy_boto3_output -s ec2 s3\n\n# Install custom `boto3-stubs` packages\ncd mypy_boto3_output\npython -m pip install -e ./mypy_boto3_ec2_package\npython -m pip install -e ./mypy_boto3_s3_package\npython -m pip install -e ./boto3_stubs_package</code></pre>"},{"location":"how_to_build/#with-docker-image","title":"With Docker image","text":"<ul> <li>Install Docker</li> <li>Pull latest <code>mypy_boto3_builder</code> version and tag it</li> </ul> <pre><code>docker pull docker.pkg.github.com/youtype/mypy_boto3_builder/mypy_boto3_builder_stable:latest\ndocker tag docker.pkg.github.com/youtype/mypy_boto3_builder/mypy_boto3_builder_stable:latest mypy_boto3_builder</code></pre> <ul> <li>Generate stubs in <code>output</code> directory</li> </ul> <pre><code>mkdir output\n\n# generate stubs for all services\ndocker run -v `pwd`/output:/output -ti mypy_boto3_builder_stable\n\n# generate stubs for s3 service\ndocker run -v `pwd`/output:/output -ti mypy_boto3_builder_stable -s s3\n\n# generate stubs for a specific boto3 version\ndocker run -e BOTO3_VERSION=1.16.25 BOTOCORE_VERSION=1.19.25 -v `pwd`/output:/output -ti mypy_boto3_builder_stable</code></pre> <ul> <li>Install packages from <code>output</code> directory as described above</li> </ul>"},{"location":"pre_build/","title":"How to use pre-built libraries","text":""},{"location":"pre_build/#boto3-and-botocore","title":"boto3 and botocore","text":"<p>Check boto3-stubs project for installation and usage instructions.</p> <p>If you use VSCode, add AWS Boto3 extension to your VSCode and run <code>AWS boto3: Quick Start</code> command.</p> <p>If not, just install <code>boto3-stubs</code> with <code>pip</code>:</p> <pre><code>python -m pip install 'boto3-stubs[essential]'\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'boto3-stubs-lite[essential]'\n\n# do not forget to install mypy or pyright</code></pre> <p>That's it! You should already have code completion and type checking in your IDE.</p> <p>Check boto3-stubs documentation for more details.</p>"},{"location":"pre_build/#aiobotocore","title":"aiobotocore","text":"<p>Check types-aiobotocore project for installation and usage instructions.</p> <p>Or just install <code>types-aiobotocore</code> with <code>pip</code>:</p> <pre><code>python -m pip install 'types-aiobotocore[essential]'\n\n# Lite version does not provide session.create_client overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'types-aiobotocore-lite[essential]'\n\n# do not forget to install mypy or pyright</code></pre> <p>Ready to go! Enjoy code completion and type checking in your <code>aiobotocore</code> project.</p> <p>Check types-aiobotocore documentation for more details.</p>"},{"location":"pre_build/#aioboto3","title":"aioboto3","text":"<p>Check types-aioboto3 project for installation and usage instructions.</p> <p>Or just install <code>types-aioboto3</code> with <code>pip</code>:</p> <pre><code>python -m pip install 'types-aioboto3[essential]'\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'types-aioboto3-lite[essential]'\n\n# do not forget to install mypy or pyright</code></pre> <p>Whoa! All <code>aioboto3</code> methods and attributes are now type annotated and even code completion works.</p> <p>Check types-aioboto3 documentation for more details.</p>"},{"location":"thank_you/","title":"Thank you","text":""},{"location":"thank_you/#toolset","title":"Toolset","text":"<ul> <li>black developers for an awesome formatting tool</li> <li>Timothy Edmund Crosley for   isort and how flexible it is</li> <li>mypy developers for doing all dirty work for us</li> <li>pyright team for the new era of typed Python</li> <li>ruff developers for the fastest swiss knife for Python</li> </ul>"},{"location":"thank_you/#contributors","title":"Contributors","text":"<ul> <li>Allie Fitter, author of original   boto3-type-annotations</li> <li>jbpratt</li> <li>Chris Hollinworth</li> <li>Yoan Blanc</li> <li>Kostya Leschenko</li> <li>pyto86</li> <li>Ashton Honnecke</li> <li>Mike Carey</li> <li>Ole-Martin Bratteng</li> <li>Nikhil Benesch</li> <li>Maksym Balatsko</li> <li>Jacob</li> <li>Jakob Keller</li> <li>Ari Pollak</li> </ul>"}]}